/* Desktop.cpp */
//----------------------------------------------------------------------------------------
//
//  Project: CCore 3.00
//
//  Tag: Target/LIN64
//
//  License: Boost Software License - Version 1.0 - August 17th, 2003
//
//            see http://www.boost.org/LICENSE_1_0.txt or the local copy
//
//  Copyright (c) 2016 Sergey Strukov. All rights reserved.
//
//----------------------------------------------------------------------------------------

#include <CCore/inc/video/Desktop.h>
#include <CCore/inc/video/Picture.h>

#include <CCore/inc/Print.h>
#include <CCore/inc/Exception.h>
#include <CCore/inc/PrintError.h>
#include <CCore/inc/CapString.h>
#include <CCore/inc/CharProp.h>
#include <CCore/inc/Timer.h>
#include <CCore/inc/Tree.h>
#include <CCore/inc/List.h>
#include <CCore/inc/Array.h>
#include <CCore/inc/PlatformRandom.h>

#include <CCore/inc/task/TaskEvent.h>

#include <X11/Xlib.h>
#include <X11/cursorfont.h>
#include <X11/keysym.h>
#include <X11/Xatom.h>
#include <X11/Xcursor/Xcursor.h>
#include <X11/Xutil.h>

#include <poll.h>
#include <sys/eventfd.h>
#include <unistd.h>

#include <cstdlib>
#include <clocale>
#include <cwctype>
#include <cctype>
#include <cstring>

namespace CCore {
namespace Video {

/* class CharMapTable */

CharMapTable::CharMapTable()
 {
  std::setlocale(LC_ALL,std::getenv("LANG"));

  table[0]=0;

  for(unsigned ind=1; ind<256u ;ind++)
    {
     char ch=char(ind);

     char in[2]={ch,0};
     wchar_t out[2];

     auto len=std::mbstowcs(out,in,2);

     if( len!=1 )
       {
        table[ind]=0;
       }
     else
       {
        table[ind]=out[0];
       }
    }
 }

/* class SystemFontDirs */

SystemFontDirs::SystemFontDirs()
 {
  // 0

  buf[0].add("/usr/share/fonts");

  dir[0]=buf[0].get();

  // 1

  buf[1].add("/usr/local/share/fonts");

  dir[1]=buf[1].get();

  // 2

  if( const char *home=std::getenv("HOME") )
    {
     if( +buf[2].add(home,"/fonts") )
       {
        dir[2]=buf[2].get();
       }
     else
       {
        Printf(Exception,"CCore::Video::SystemFontDirs::SystemFontDirs() : too long file name");
       }
    }
  else
    {
     Printf(Exception,"CCore::Video::SystemFontDirs::SystemFontDirs() : no HOME");
    }
 }

/* class HomeDir */

HomeDir::HomeDir()
 {
  if( const char *home=std::getenv("HOME") )
    {
     if( +buf.add(home) )
       {
        dir=buf.get();
       }
     else
       {
        Printf(Exception,"CCore::Video::HomeDir::HomeDir() : too long file name");
       }
    }
  else
    {
     Printf(Exception,"CCore::Video::HomeDir::HomeDir() : no HOME");
    }
 }

/* namespace Private_Desktop */

namespace Private_Desktop {

/* NativeByteOrder() */

int NativeByteOrder()
 {
  uint32 val=1;

  if( *(uint8 *)&val ) return LSBFirst; else return MSBFirst;
 }

/* Point_cast() */

template <class T1,class T2>
Point Point_cast(T1 x,T2 y) { return Point((Coord)x,(Coord)y); }

/* Pane_cast() */

template <class T1,class T2,class T3,class T4>
Pane Pane_cast(T1 x,T2 y,T3 dx,T4 dy) { return Pane((Coord)x,(Coord)y,(Coord)dx,(Coord)dy); }

/* SysGuard() */

void SysGuardFailed(const char *format,Sys::ErrorType error=Sys::NonNullError())
 {
  Printf(Exception,format,PrintError(error));
 }

void SysGuard(const char *format,bool ok)
 {
  if( !ok ) SysGuardFailed(format);
 }

/* CloseApp() */

void CloseApp();

/* RestoreApp() */

void RestoreApp();

/* struct PrintXStatus */

struct PrintXStatus
 {
  Display *display;
  Status status;

  PrintXStatus(Display *display_,Status status_) : display(display_),status(status_) {}

  template <class P>
  void print(P &out) const
   {
    char temp[TextBufLen];

    XGetErrorText(display,status,temp,TextBufLen);

    Putobj(out,temp);
   }
 };

/* struct TickEvent */

struct TickEvent
 {
  EventTimeType time;
  EventIdType id;

  uint8 flag;

  enum FlagType
   {
    Entry,
    Leave
   };

  void init(EventTimeType time_,EventIdType id_,FlagType flag_)
   {
    time=time_;
    id=id_;

    flag=flag_;
   }

  static void * Offset_time(void *ptr) { return &(static_cast<TickEvent *>(ptr)->time); }

  static void * Offset_id(void *ptr) { return &(static_cast<TickEvent *>(ptr)->id); }

  static void * Offset_flag(void *ptr) { return &(static_cast<TickEvent *>(ptr)->flag); }

  static void Register(EventMetaInfo &info,EventMetaInfo::EventDesc &desc)
   {
    auto id_Flag=info.addEnum_uint8("WinTickFlag")
                     .addValueName(Entry,"Entry",EventMarker_Up)
                     .addValueName(Leave,"Leave",EventMarker_Down)
                     .getId();

    auto id=info.addStruct("WinTickEvent")
                .addField_uint32("time",Offset_time)
                .addField_uint16("id",Offset_id)
                .addField_enum_uint8(id_Flag,"flag",Offset_flag)
                .getId();

    desc.setStructId(info,id);
   }
 };

/* struct MsgEvent */

struct MsgEvent
 {
  EventTimeType time;
  EventIdType id;

  uint32 type;
  uint8 flag;

  enum FlagType
   {
    Entry,
    Leave,
    Stop
   };

  void init(EventTimeType time_,EventIdType id_,int type_,FlagType flag_)
   {
    time=time_;
    id=id_;

    type=type_;
    flag=flag_;
   }

  static void * Offset_time(void *ptr) { return &(static_cast<MsgEvent *>(ptr)->time); }

  static void * Offset_id(void *ptr) { return &(static_cast<MsgEvent *>(ptr)->id); }

  static void * Offset_type(void *ptr) { return &(static_cast<MsgEvent *>(ptr)->type); }

  static void * Offset_flag(void *ptr) { return &(static_cast<MsgEvent *>(ptr)->flag); }

  static void Register(EventMetaInfo &info,EventMetaInfo::EventDesc &desc)
   {
    auto id_Type=info.addEnum_uint32("WinMsgCode")
                     .addValueName(KeyPress,"KeyPress")
                     .addValueName(KeyRelease,"KeyRelease")
                     .addValueName(ButtonPress,"ButtonPress")
                     .addValueName(ButtonRelease,"ButtonRelease")
                     .addValueName(MotionNotify,"MotionNotify")
                     .addValueName(EnterNotify,"EnterNotify")
                     .addValueName(LeaveNotify,"LeaveNotify")
                     .addValueName(FocusIn,"FocusIn")
                     .addValueName(FocusOut,"FocusOut")
                     .addValueName(KeymapNotify,"KeymapNotify")
                     .addValueName(Expose,"Expose")
                     .addValueName(GraphicsExpose,"GraphicsExpose")
                     .addValueName(NoExpose,"NoExpose")
                     .addValueName(VisibilityNotify,"VisibilityNotify")
                     .addValueName(CreateNotify,"CreateNotify")
                     .addValueName(DestroyNotify,"DestroyNotify")
                     .addValueName(UnmapNotify,"UnmapNotify")
                     .addValueName(MapNotify,"MapNotify")
                     .addValueName(MapRequest,"MapRequest")
                     .addValueName(ReparentNotify,"ReparentNotify")
                     .addValueName(ConfigureNotify,"ConfigureNotify")
                     .addValueName(ConfigureRequest,"ConfigureRequest")
                     .addValueName(GravityNotify,"GravityNotify")
                     .addValueName(ResizeRequest,"ResizeRequest")
                     .addValueName(CirculateNotify,"CirculateNotify")
                     .addValueName(CirculateRequest,"CirculateRequest")
                     .addValueName(PropertyNotify,"PropertyNotify")
                     .addValueName(SelectionClear,"SelectionClear")
                     .addValueName(SelectionRequest,"SelectionRequest")
                     .addValueName(SelectionNotify,"SelectionNotify")
                     .addValueName(ColormapNotify,"ColormapNotify")
                     .addValueName(ClientMessage,"ClientMessage")
                     .addValueName(MappingNotify,"MappingNotify")
                     .addValueName(GenericEvent,"GenericEvent")
                     .getId();

    auto id_Flag=info.addEnum_uint8("WinMsgFlag")
                     .addValueName(Entry,"Entry",EventMarker_Up)
                     .addValueName(Leave,"Leave",EventMarker_Down)
                     .addValueName(Stop,"Stop",EventMarker_Stop)
                     .getId();

    auto id=info.addStruct("WinMsgEvent")
                .addField_uint32("time",Offset_time)
                .addField_uint16("id",Offset_id)
                .addField_enum_uint32(id_Type,"type",Offset_type)
                .addField_enum_uint8(id_Flag,"flag",Offset_flag)
                .getId();

    desc.setStructId(info,id);
   }
 };

/* class X11KeyMap */

class X11KeyMap : NoCopy
 {
   bool ok = false ;

   int keycode_min = 0 ;
   int keycode_max = 0 ;

   int page_count = 0 ;
   KeySym *table = 0 ;

  public:

   explicit X11KeyMap(Display *display);

   ~X11KeyMap();

   bool noMap() const { return !ok; }

   void updateMap(Display *display);

   // get

   MouseKey getMKey(unsigned state) const;

   KeyMod getKMod(unsigned state) const;

   // mapToVKey

   static bool IsKP(KeySym ksym);

   KeySym map(unsigned state,unsigned keycode) const;

   struct VKeyExt
    {
     VKey vkey;
     bool ext;

     VKeyExt(VKey vkey_,bool ext_=false) : vkey(vkey_),ext(ext_) {}
    };

   struct Ext : VKeyExt
    {
     Ext(VKey vkey) : VKeyExt(vkey,true) {}
    };

   static VKeyExt MapToVKey(KeySym ksym);

   VKeyExt mapToVKey(unsigned state,unsigned keycode) const;

   // mapToChar

   struct VKeyExtChar : VKeyExt
    {
     char ch;

     VKeyExtChar(VKeyExt vkeyext,char ch_) : VKeyExt(vkeyext),ch(ch_) {}
    };

   static uint32 MapToUnicode(KeySym ksym);

   static char MapToChar(KeySym ksym);

   static bool IsChar(KeySym ksym);

   VKeyExtChar mapToChar(unsigned state,unsigned keycode) const;
 };

/* class X11Desktop */

class X11Desktop : public Desktop
 {
   Display *display = 0 ;
   int screen = 0 ;
   int fd = -1 ;
   int sem_fd = -1 ;

   const char *func_name = "" ;

   X11KeyMap keymap;

  private:

   void guardDisplay(const char *format);

   static Bool MatchAll(Display *,XEvent *,XPointer);

   static int ErrorHandler(Display *display,XErrorEvent *err);

   static int IOErrorHandler(Display *);

  public:

   X11Desktop();

   ~X11Desktop();

   Display * getDisplay() const { return display; }

   int getScreen() const { return screen; }

   // error handle

   void setFuncName(const char *name)
    {
     func_name=name;
    }

   // key map

   void updateMap() { keymap.updateMap(display); }

   MouseKey getMKey(unsigned state) const { return keymap.getMKey(state); }

   KeyMod getKMod(unsigned state) const { return keymap.getKMod(state); }

   auto mapToVKey(unsigned state,unsigned keycode) const { return keymap.mapToVKey(state,keycode); }

   auto mapToChar(unsigned state,unsigned keycode) const { return keymap.mapToChar(state,keycode); }

   // Desktop

   virtual WindowHost * createHost();

   virtual Point getScreenSize();

   virtual Pane getMaxPane();

   virtual bool pump(unsigned lim);

   virtual void wait(TimeScope time_scope);

   virtual void interrupt(); // async
 };

X11Desktop DesktopObject CCORE_INITPRI_3 ;

/* class WindowBuf */

class WindowBuf : NoCopy
 {
   void *mem = 0 ;
   Point size;
   XImage image;

  public:

   WindowBuf()
    {
    }

   ~WindowBuf()
    {
     if( mem )
       {
        MemFree(mem);
       }
    }

   Point getSize() const { return size; }

   void * getMem() const { return mem; }

   ColorPlane getPlane() const { return ColorPlane(mem,size.x,size.y,size.x*4u); }

   void setSize(Point new_size)
    {
     // destroy

     if( mem )
       {
        MemFree(mem);

        mem=0;
        size=Null;
       }

     // create

     mem=MemAlloc(ulen(new_size.y)*ulen(new_size.x)*4u);

     image.width=new_size.x;
     image.height=new_size.y;

     image.xoffset=0;
     image.format=ZPixmap;
     image.data=(char *)mem;

     image.byte_order=NativeByteOrder();
     image.bitmap_unit=32;
     image.bitmap_bit_order=LSBFirst;

     image.bitmap_pad=32;
     image.depth=24;
     image.bytes_per_line=ulen(new_size.x)*4u;
     image.bits_per_pixel=32;

     image.red_mask=0xFF0000;
     image.green_mask=0xFF00;
     image.blue_mask=0xFF;

     image.obdata=0;

     DesktopObject.setFuncName("XInitImage");

     if( XInitImage(&image) )
       {
        size=new_size;
       }
     else
       {
        MemFree(mem);

        mem=0;

        Printf(Exception,"CCore::Video::Private_Desktop::WindowBuf::setSize(...) : image init");
       }
    }

   void draw(Display *display,Window window,GC gc,Pane pane)
    {
     if( !mem ) return;

     pane=Inf(pane,Pane(Null,size));

     if( !pane ) return;

     DesktopObject.setFuncName("XPutImage");

     XPutImage(display,window,gc,&image,pane.x,pane.y,pane.x,pane.y,pane.dx,pane.dy);
    }
 };

/* class WindowDispatcher */

class WindowDispatcher : NoCopy
 {
   TreeLink<WindowDispatcher,Window> link;

   using Algo = TreeLink<WindowDispatcher,Window>::RadixAlgo<&WindowDispatcher::link> ;

  private:

   virtual void handle(XEvent &event)=0;

   virtual void ping()=0;

  private:

   static bool StopEventFlag;

   static Algo::Root MapRoot;

   static WindowDispatcher * Find(Window window)
    {
     return MapRoot.find(window);
    }

   static void Ping(WindowDispatcher *obj)
    {
     if( obj )
       {
        obj->ping();

        auto &link=Algo::Link(obj);

        Ping(link.lo);
        Ping(link.hi);
       }
    }

  public:

   WindowDispatcher()
    {
     link.key=None;
    }

   ~WindowDispatcher()
    {
     DelFromMap(this);
    }

   static void Stop() { StopEventFlag=true; }

   static void AddToMap(Window window,WindowDispatcher *obj)
    {
     const char *format="CCore::Video::Private_Desktop::WindowDispatcher::AddToMap(...) : #;";

     if( obj->link.key!=None )
       {
        Printf(Exception,format,"obj is mapped");
       }

     Algo::PrepareIns prepare(MapRoot,window);

     if( prepare.found )
       {
        Printf(Exception,format,"window duplication");
       }
     else
       {
        prepare.complete(obj);
       }
    }

   static void DelFromMap(WindowDispatcher *obj)
    {
     if( obj->link.key!=None )
       {
        MapRoot.del(obj);

        obj->link.key=None;
       }
    }

   static bool DispatchEvent(XEvent &event)
    {
     if( StopEventFlag )
       {
        StopEventFlag=false;

        TaskEventHost.add<MsgEvent>(MsgEvent::Stop);

        return false;
       }

     TaskEventHost.add<MsgEvent>(event.type,MsgEvent::Entry);

     if( event.type==MappingNotify )
       {
        if( event.xmapping.request==MappingKeyboard )
          {
           DesktopObject.updateMap();
          }
       }
     else
       {
        if( auto *obj=Find(event.xany.window) ) try { obj->handle(event); } catch(...) {}
       }

     TaskEventHost.add<MsgEvent>(event.type,MsgEvent::Leave);

     return true;
    }

   static bool Ping()
    {
     if( StopEventFlag )
       {
        StopEventFlag=false;

        TaskEventHost.add<MsgEvent>(MsgEvent::Stop);

        return false;
       }

     Ping(MapRoot.root);

     return true;
    }
 };

WindowDispatcher::Algo::Root WindowDispatcher::MapRoot CCORE_INITPRI_3 ;

bool WindowDispatcher::StopEventFlag = false ;

/* class HiddenWindowHost */

class HiddenWindowHost : WindowDispatcher
 {
   Display *disp;
   int screen;

   Window window = None ;

   DynArray<uint32> icon;

   Atom net_wm_icon = None ;
   Atom net_wm_state = None ;
   Atom net_wm_state_hidden = None ;
   Atom wm_protocols = None ;
   Atom wm_delete_window = None ;

  private:

   void testState(const long *data,unsigned long count)
    {
     bool hidden=false;

     for(long atom : Range(data,count) )
       if( atom==(long)net_wm_state_hidden )
         {
          hidden=true;

          break;
         }

     if( !hidden )
       {
        RestoreApp();
        iconify();
       }
    }

   void testState()
    {
     DesktopObject.setFuncName("XGetWindowProperty");

     Atom type=None;
     int format=0;
     unsigned long ret_len=0;
     unsigned long rest_len=0;
     unsigned char *data=0;

     XGetWindowProperty(disp,window,net_wm_state,0,0,False,XA_ATOM,&type,&format,&ret_len,&rest_len,&data);

     if( format==0 ) return;

     XFree(data);

     format=0;
     data=0;

     XGetWindowProperty(disp,window,net_wm_state,0,rest_len/4,False,XA_ATOM,&type,&format,&ret_len,&rest_len,&data);

     if( format==0 ) return;

     if( format==32 )
       {
        testState((long *)data,ret_len);
       }

     XFree(data);
    }

   virtual void handle(XEvent &event)
    {
     switch( event.type )
       {
        case ReparentNotify :
         {
         }
        break;

        case ButtonPress :
         {
          RestoreApp();
          iconify();
         }
        break;

        case MapNotify :
         {
          RestoreApp();
          iconify();
         }
        break;

        case PropertyNotify :
         {
          XPropertyEvent &data=event.xproperty;

          if( net_wm_state!=None && net_wm_state_hidden!=None && data.atom==net_wm_state ) testState();
         }
        break;

        case ClientMessage :
         {
          XClientMessageEvent &data=event.xclient;

          if( wm_protocols==None || wm_delete_window==None ) break;

          if( data.message_type==wm_protocols )
            {
             if( data.format==32 && data.data.l[0]==(long)wm_delete_window )
               {
                CloseApp();
               }
            }
         }
        break;
       }
    }

   virtual void ping()
    {
     // do nothing
    }

   Point getIconSize()
    {
     return Point(128,128);
    }

   void setIcon()
    {
     if( !icon.getLen() ) return;

     if( net_wm_icon==None ) return;

     DynArray<long> temp;

     temp.extend_cast(icon.getLen(),icon.getPtr());

     DesktopObject.setFuncName("XChangeProperty");

     XChangeProperty(disp,window,net_wm_icon,XA_CARDINAL,32,PropModeReplace,(unsigned char *)temp.getPtr(),temp.getLen());
    }

   void setProtocols()
    {
     if( wm_delete_window==None ) return;

     DesktopObject.setFuncName("XSetWMProtocols");

     XSetWMProtocols(disp,window,&wm_delete_window,1);
    }

  public:

   HiddenWindowHost()
    {
     disp=DesktopObject.getDisplay();
     screen=DesktopObject.getScreen();

     if( !disp ) return;

     DesktopObject.setFuncName("XInternAtom");

     net_wm_icon=XInternAtom(disp,"_NET_WM_ICON",False);
     net_wm_state=XInternAtom(disp,"_NET_WM_STATE",False);
     net_wm_state_hidden=XInternAtom(disp,"_NET_WM_STATE_HIDDEN",False);
     wm_protocols=XInternAtom(disp,"WM_PROTOCOLS",False);
     wm_delete_window=XInternAtom(disp,"WM_DELETE_WINDOW",False);
    }

   ~HiddenWindowHost()
    {
     DelFromMap(this);
    }

   void create()
    {
     const char *format="CCore::Video::Private_Desktop::HiddenWindowHost::create() : #;";

     if( window!=None ) return;

     Window root=RootWindow(disp,screen);

     DesktopObject.setFuncName("XCreateSimpleWindow");

     window=XCreateSimpleWindow(disp,root,0,0,100,100,0,0,0);

     if( window==None )
       {
        Printf(Exception,format,"cannot create window");
       }

     setIcon();

     setProtocols();

     AddToMap(window,this);

     DesktopObject.setFuncName("XSelectInput");

     XSelectInput(disp,window,StructureNotifyMask|ButtonPressMask|PropertyChangeMask);

     DesktopObject.setFuncName("XMapWindow");

     XMapWindow(disp,window);
    }

   void destroy()
    {
     if( window!=None )
       {
        DesktopObject.setFuncName("XDestroyWindow");

        XDestroyWindow(disp,window);

        window=None;
       }
    }

   void setTitle(StrLen str)
    {
     XTextProperty prop;

     prop.value=(unsigned char *)str.ptr;
     prop.encoding=XA_STRING;
     prop.format=8;
     prop.nitems=str.len;

     DesktopObject.setFuncName("XSetWMName");

     XSetWMName(disp,window,&prop);
    }

   void setIcon(Picture pict)
    {
     Point size=getIconSize();

     icon.erase();

     uint32 *ptr=icon.extend_raw(2+Area(size.x,size.y)).ptr;

     ptr[0]=size.x;
     ptr[1]=size.y;

     ColorPlane plane(ptr+2,size.x,size.y,DLineType(size.x)*4u);

     FrameBuf<DesktopColor> out(plane);

     DrawBuf buf(out);

     buf.erase(pict->defaultGround());

     pict->draw(buf,size.x,size.y);

     auto r=Range(icon);

     r+=2;

     for(uint32 &x : r ) x|=0xFF000000;
    }

   void iconify()
    {
     DesktopObject.setFuncName("XIconifyWindow");

     XIconifyWindow(disp,window,screen);
    }
 };

HiddenWindowHost HiddenWindow CCORE_INITPRI_3 ;

/* const MsgBoxIcon */

const long MsgBoxIcon[]=
{
 128 , 128 ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF75171B , 0xFF76171B , 0xFF76171B , 0xFF77171B , 0xFF77171B , 0xFF77171B , 0xFF77171B , 0xFF78181C , 0xFF77171B , 0xFF77171B , 0xFF78181C , 0xFF77171B , 0xFF78181C , 0xFF77171B , 0xFF78181C , 0xFF77171B , 0xFF78181C , 0xFF77171B , 0xFF78181C , 0xFF79181C , 0xFF79181C , 0xFF7A181C , 0xFF7B181C , 0xFF7C181C , 0xFF7D181D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF76171B , 0xFF77171B , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF79181C , 0xFF7A181C , 0xFF7B181C , 0xFF7C191D , 0xFF7E191D , 0xFF821B1E , 0xFF871D20 , 0xFF912122 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF74171B , 0xFF73161A , 0xFF73161A , 0xFF74171B , 0xFF73161A , 0xFF74171B , 0xFF73161A , 0xFF74171B , 0xFF73161A , 0xFF74171B , 0xFF75171B , 0xFF76171B , 0xFF77171B , 0xFF77171B , 0xFF78181C , 0xFF77171B , 0xFF78181C , 0xFF77171B , 0xFF77171B , 0xFF78181C , 0xFF77171B , 0xFF78181C , 0xFF77171B , 0xFF78181C , 0xFF77171B , 0xFF78181C , 0xFF77171B , 0xFF77171B , 0xFF78181C , 0xFF77171B , 0xFF78181C , 0xFF77171B , 0xFF78181C , 0xFF78181C , 0xFF7A181C , 0xFF7B181C , 0xFF7B181C , 0xFF7C191D , 0xFF831C1F , 0xFF912423 , 0xFFA32D28 , 0xFFAC322A , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF73171A , 0xFF73171A , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF75171B , 0xFF77171B , 0xFF77171B , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF78181C , 0xFF7D191D , 0xFF831A1E , 0xFF891B1F , 0xFF8E1C21 , 0xFF941D22 , 0xFF981E23 , 0xFF9B1F23 , 0xFFA02025 , 0xFFA02025 , 0xFFA02025 , 0xFFA02025 , 0xFFA02025 , 0xFFA02025 , 0xFF9B1F24 , 0xFF9A1F23 , 0xFF961E22 , 0xFF911D21 , 0xFF8B1C20 , 0xFF861B1F , 0xFF821B1E , 0xFF922523 , 0xFFAA322A , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF71161A , 0xFF73171A , 0xFF73161A , 0xFF74171B , 0xFF73161A , 0xFF74171B , 0xFF73161A , 0xFF73161A , 0xFF74171B , 0xFF73161A , 0xFF74171B , 0xFF73161A , 0xFF74171B , 0xFF73161A , 0xFF74171B , 0xFF73161A , 0xFF73161A , 0xFF74171B , 0xFF73161A , 0xFF74171B , 0xFF74171B , 0xFF7A181C , 0xFF841A1E , 0xFF8F1C21 , 0xFF9A1F23 , 0xFFA72628 , 0xFFB62F2E , 0xFFBE3833 , 0xFFC54238 , 0xFFCE4738 , 0xFFD64A36 , 0xFFD94F38 , 0xFFDD553A , 0xFFDE5D41 , 0xFFE2593B , 0xFFE36142 , 0xFFE26345 , 0xFFE36345 , 0xFFE26244 , 0xFFE1573A , 0xFFDD5D42 , 0xFFDC5238 , 0xFFD94E38 , 0xFFD14B39 , 0xFFCB473A , 0xFFC43F36 , 0xFFBD3632 , 0xFFB42B2B , 0xFFA42427 , 0xFF9C2124 , 0xFFAA2C28 , 0xFFB1332B , 0xFFC23E30 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF72171A , 0xFF73171A , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF74171B , 0xFF79181C , 0xFF851A1E , 0xFF951E22 , 0xFFA72729 , 0xFFB73431 , 0xFFC74137 , 0xFFD24E3B , 0xFFE0573A , 0xFFE75C3A , 0xFFEA613D , 0xFFEC623C , 0xFFED613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE55A39 , 0xFFDF573A , 0xFFD74F39 , 0xFFCB473A , 0xFFBE3833 , 0xFFB52B2B , 0xFFB72C2B , 0xFFC4382F , 0xFFCD4232 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF701619 , 0xFF70171A , 0xFF72161A , 0xFF73171A , 0xFF73161A , 0xFF74171B , 0xFF73161A , 0xFF73161A , 0xFF74171B , 0xFF73161A , 0xFF74171B , 0xFF73161A , 0xFF74171B , 0xFF74171B , 0xFF7B181C , 0xFF8E1C21 , 0xFFA22327 , 0xFFB73331 , 0xFFCD4435 , 0xFFDD5439 , 0xFFE65E3D , 0xFFED633D , 0xFFED623B , 0xFFED623B , 0xFFED623C , 0xFFEC613B , 0xFFED623C , 0xFFEC613B , 0xFFEC613B , 0xFFEB603B , 0xFFEC603B , 0xFFEB603A , 0xFFEB603A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEB5F3B , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95E3A , 0xFFE85D3A , 0xFFE95D3A , 0xFFE85D39 , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75C39 , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65B3A , 0xFFE35839 , 0xFFD84F37 , 0xFFC94338 , 0xFFBB3232 , 0xFFBA2C2C , 0xFFC2342F , 0xFFCE4333 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF70171A , 0xFF71161A , 0xFF72171A , 0xFF73161A , 0xFF73161A , 0xFF74171B , 0xFF73161A , 0xFF74171B , 0xFF79181C , 0xFF8E1C21 , 0xFFA52428 , 0xFFC23832 , 0xFFD54E3A , 0xFFE45F3F , 0xFFEE643C , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFEE623C , 0xFFED623B , 0xFFED623B , 0xFFED623C , 0xFFEC613B , 0xFFEC613C , 0xFFEC603B , 0xFFEC613B , 0xFFEB603A , 0xFFEC603B , 0xFFEB5F3A , 0xFFEB5F3A , 0xFFEB5F3B , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFEA5E3A , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95E3A , 0xFFE85D39 , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85D3A , 0xFFE75C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE45A3A , 0xFFDB5239 , 0xFFCB4033 , 0xFFBA2F30 , 0xFFBD2F2D , 0xFFC83B31 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF6F1619 , 0xFF6F1619 , 0xFF6F1619 , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF71171A , 0xFF75171B , 0xFF871A1F , 0xFFA02327 , 0xFFBD3833 , 0xFFD54E3A , 0xFFEA5E3A , 0xFFEE633C , 0xFFEF643C , 0xFFEF633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFE95E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45939 , 0xFFE2583A , 0xFFD44F3C , 0xFFC13934 , 0xFFBA2C2D , 0xFFC53830 , 0xFFCD4133 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF6E1619 , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF70171A , 0xFF76181B , 0xFF8E1D21 , 0xFFB02B2A , 0xFFCC4537 , 0xFFE35E3F , 0xFFED643D , 0xFFEF643C , 0xFFEE633B , 0xFFEF633C , 0xFFEE633B , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFED623C , 0xFFED623B , 0xFFED623C , 0xFFEC613B , 0xFFEC613B , 0xFFEC613B , 0xFFEB603B , 0xFFEC603B , 0xFFEB603A , 0xFFEB603B , 0xFFEB5F3A , 0xFFEB5F3B , 0xFFEA5F3A , 0xFFEA5E3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFEA5E3B , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D39 , 0xFFE85D39 , 0xFFE85D3A , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75C39 , 0xFFE75C3A , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45938 , 0xFFE45838 , 0xFFE45839 , 0xFFE35838 , 0xFFE45839 , 0xFFE35738 , 0xFFE25739 , 0xFFD94E37 , 0xFFC4362F , 0xFFBA2C2D , 0xFFC53830 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF6C1619 , 0xFF6E1619 , 0xFF6F1619 , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF78181B , 0xFF941F23 , 0xFFB73330 , 0xFFD64E39 , 0xFFEA603C , 0xFFEF643D , 0xFFEF643C , 0xFFEF643C , 0xFFEF643C , 0xFFEF633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFE95E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE45939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25738 , 0xFFD7503A , 0xFFC03934 , 0xFFBC2F2D , 0xFFC83C31 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF6C1619 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6E1619 , 0xFF6F1619 , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF70171A , 0xFF6F1619 , 0xFF6F1619 , 0xFF70171A , 0xFF75181B , 0xFF961E23 , 0xFFBB3532 , 0xFFD9573F , 0xFFED643D , 0xFFEF643C , 0xFFEF643D , 0xFFEE643C , 0xFFEF643C , 0xFFEE633B , 0xFFEF633C , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFED623B , 0xFFED623C , 0xFFEC613B , 0xFFED623C , 0xFFEC613B , 0xFFEC613B , 0xFFEB603B , 0xFFEB603A , 0xFFEC603B , 0xFFEB603A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEB5F3B , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95E3A , 0xFFE85D39 , 0xFFE85D3A , 0xFFE85C39 , 0xFFE75C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75C3A , 0xFFE65B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE55A38 , 0xFFE55A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45939 , 0xFFE45838 , 0xFFE35838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15638 , 0xFFD34936 , 0xFFBA2D2E , 0xFFC0322E , 0xFFCB3F32 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6E1619 , 0xFF6F1619 , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF70171A , 0xFF74171B , 0xFF921E22 , 0xFFBC322E , 0xFFDC553C , 0xFFEF653D , 0xFFF0653D , 0xFFEF643D , 0xFFEF643C , 0xFFEF643C , 0xFFEF643C , 0xFFEF643C , 0xFFEF633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED613C , 0xFFED613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFEA5E3B , 0xFFE95E3B , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFDE5439 , 0xFFC74239 , 0xFFBA2D2D , 0xFFC63A30 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6D1619 , 0xFF6F1619 , 0xFF6F1619 , 0xFF71171A , 0xFF891C1F , 0xFFB22F2F , 0xFFD7523C , 0xFFED633D , 0xFFF0653D , 0xFFEF643C , 0xFFEF643D , 0xFFEF643C , 0xFFEE633C , 0xFFEF643C , 0xFFEE633B , 0xFFEE633C , 0xFFEE623B , 0xFFEE633C , 0xFFED623B , 0xFFED623C , 0xFFEC613B , 0xFFEC613B , 0xFFED613C , 0xFFEC613B , 0xFFEC613B , 0xFFEB603B , 0xFFEC603B , 0xFFEB603A , 0xFFEB5F3A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFEA5E3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFE95E3B , 0xFFE95D3A , 0xFFE85D3A , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85D3A , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A38 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45839 , 0xFFE35838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE15537 , 0xFFE05437 , 0xFFE15538 , 0xFFE05437 , 0xFFDF5437 , 0xFFD34D39 , 0xFFBC2D2C , 0xFFC2342F , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF6B1518 , 0xFF6B1518 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF6C1619 , 0xFF7B181C , 0xFFA52527 , 0xFFCD483A , 0xFFEA633E , 0xFFF0653D , 0xFFEF643C , 0xFFF0653D , 0xFFEF643C , 0xFFEF643C , 0xFFEE633C , 0xFFEE633B , 0xFFEF633C , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFED623C , 0xFFED623B , 0xFFED623C , 0xFFEC613B , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603A , 0xFFEB603B , 0xFFEB5F3A , 0xFFEA5F3A , 0xFFEB5F3B , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE85D3A , 0xFFE85D39 , 0xFFE85D3A , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75C39 , 0xFFE75C3A , 0xFFE75B39 , 0xFFE65B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45938 , 0xFFE45838 , 0xFFE45939 , 0xFFE45838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25738 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFE05337 , 0xFFDF5336 , 0xFFDB4F36 , 0xFFBF3531 , 0xFFBF312E , 0xFFCA3E32 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF6A1518 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6E1619 , 0xFF8F1D21 , 0xFFBF3730 , 0xFFE45A3A , 0xFFF0653D , 0xFFF0653D , 0xFFF0653D , 0xFFF0643D , 0xFFEF643C , 0xFFEF643C , 0xFFEF643C , 0xFFEF633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE633C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFEC613B , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFEA5E3B , 0xFFE95E3B , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDD5338 , 0xFFC43E36 , 0xFFB92A2C , 0xFFC83D32 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF691518 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF78181B , 0xFFA72729 , 0xFFD44F3B , 0xFFEF643D , 0xFFF0653D , 0xFFEF643C , 0xFFEF643C , 0xFFEF643D , 0xFFEF643C , 0xFFEF643C , 0xFFEE633B , 0xFFEF633C , 0xFFEE633B , 0xFFEE623B , 0xFFEE633C , 0xFFED623B , 0xFFED623C , 0xFFED613B , 0xFFED623C , 0xFFEC613B , 0xFFEC613C , 0xFFEC603B , 0xFFEB603A , 0xFFEC603B , 0xFFEB603A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEB5F3B , 0xFFEA5F3A , 0xFFEA5E3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFE95E3B , 0xFFE95D3A , 0xFFE95E3A , 0xFFE85D39 , 0xFFE95D3A , 0xFFE85C39 , 0xFFE75C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75C3A , 0xFFE65B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A38 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45938 , 0xFFE55939 , 0xFFE45838 , 0xFFE35838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE35738 , 0xFFE25637 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFDF5336 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDE5136 , 0xFFDD5238 , 0xFFC93F34 , 0xFFB92B2C , 0xFFC83D32 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF681518 , 0xFF681518 , 0xFF691518 , 0xFF6B1518 , 0xFF6C1518 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6C1619 , 0xFF6D1619 , 0xFF8A1C20 , 0xFFBD3631 , 0xFFE46040 , 0xFFF0653D , 0xFFF0653D , 0xFFF0653D , 0xFFF0653D , 0xFFEF643C , 0xFFEF643C , 0xFFEF643C , 0xFFEF643C , 0xFFEE633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED613C , 0xFFED613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFEA5E3B , 0xFFE95E3B , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDD5137 , 0xFFDC5137 , 0xFFCA463A , 0xFFB92B2D , 0xFFC83C31 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF681518 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF681518 , 0xFF691518 , 0xFF6B1518 , 0xFF6B1518 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF6C1619 , 0xFF6B1518 , 0xFF71161A , 0xFF9B2124 , 0xFFCF4434 , 0xFFED633D , 0xFFF0653C , 0xFFF0653D , 0xFFEF643C , 0xFFEF643D , 0xFFEF643C , 0xFFEE633C , 0xFFEF643C , 0xFFEE633B , 0xFFEE633C , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFED623B , 0xFFED623C , 0xFFEC613B , 0xFFED613C , 0xFFEC613B , 0xFFEC613B , 0xFFEB603B , 0xFFEC603B , 0xFFEB603A , 0xFFEB5F3A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEB5F3B , 0xFFEA5E3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95E3A , 0xFFE85D3A , 0xFFE95D3A , 0xFFE85D39 , 0xFFE85D3A , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A38 , 0xFFE55938 , 0xFFE55A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45839 , 0xFFE45838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE15438 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDE5136 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5136 , 0xFFDC5036 , 0xFFC74238 , 0xFFB92A2C , 0xFFC83D31 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF691518 , 0xFF6B1518 , 0xFF6C1518 , 0xFF6C1619 , 0xFF6C1619 , 0xFF76171B , 0xFFAA292B , 0xFFDA543C , 0xFFEF653D , 0xFFF0653D , 0xFFF0653D , 0xFFF0653D , 0xFFEF643C , 0xFFEF643C , 0xFFEF643C , 0xFFEF643C , 0xFFEF633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFEC613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFEA5E3B , 0xFFE95E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDB5037 , 0xFFC53830 , 0xFFBF312E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF681518 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF671417 , 0xFF681518 , 0xFF681417 , 0xFF691518 , 0xFF6B1518 , 0xFF7E191D , 0xFFB4302F , 0xFFE35F3F , 0xFFF0653D , 0xFFEF643C , 0xFFF0653D , 0xFFEF643C , 0xFFEF643C , 0xFFEE643C , 0xFFEF643C , 0xFFEE633B , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFEE633C , 0xFFED623B , 0xFFED623C , 0xFFEC613B , 0xFFEC613B , 0xFFED613C , 0xFFEC603B , 0xFFEC613B , 0xFFEB603A , 0xFFEC603B , 0xFFEB5F3A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFEA5E3A , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3B , 0xFFE95D3A , 0xFFE85D3A , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85D3A , 0xFFE75C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75C3A , 0xFFE65B39 , 0xFFE65B39 , 0xFFE65B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A38 , 0xFFE55A39 , 0xFFE55938 , 0xFFE45938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45839 , 0xFFE35838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE25637 , 0xFFE25638 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE05537 , 0xFFE05437 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5336 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5137 , 0xFFDD5036 , 0xFFDD5136 , 0xFFDC5035 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDC4F35 , 0xFFDC4F36 , 0xFFDA4E36 , 0xFFBF3632 , 0xFFC1332E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF671417 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF841A1E , 0xFFC03730 , 0xFFEA623D , 0xFFF0653D , 0xFFF0653D , 0xFFF0653D , 0xFFF0643D , 0xFFEF643C , 0xFFEF643C , 0xFFEF643C , 0xFFEF633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED613C , 0xFFEC613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDD5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFD64E39 , 0xFFBA2F30 , 0xFFC73B31 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF671417 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF671417 , 0xFF681518 , 0xFF681518 , 0xFF8A1C1F , 0xFFC54137 , 0xFFEC623C , 0xFFF0653C , 0xFFEF643C , 0xFFF0643D , 0xFFEF643C , 0xFFEF643C , 0xFFEE633C , 0xFFEF643C , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFED623B , 0xFFEE623C , 0xFFED623B , 0xFFED623C , 0xFFEC613B , 0xFFED613C , 0xFFEC613B , 0xFFEB603B , 0xFFEC613B , 0xFFEB603A , 0xFFEB603B , 0xFFEB5F3A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFEA5E3A , 0xFFE95E3A , 0xFFEA5E3B , 0xFFE95D3A , 0xFFE95E3A , 0xFFE85D3A , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75C39 , 0xFFE75C3A , 0xFFE75B39 , 0xFFE75F3E , 0xFFE86748 , 0xFFE97053 , 0xFFEA7A5F , 0xFFED8971 , 0xFFEF9B87 , 0xFFF2AB9A , 0xFFF5BCB0 , 0xFFE76A4E , 0xFFE55939 , 0xFFE45838 , 0xFFE45838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35838 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE35638 , 0xFFE25637 , 0xFFE15537 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE15538 , 0xFFE05437 , 0xFFDF5437 , 0xFFE05437 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDF5236 , 0xFFDF5237 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDC4F35 , 0xFFDB4F35 , 0xFFDC4F36 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFCF4636 , 0xFFBA2D2D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF661417 , 0xFF671417 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF671417 , 0xFF691518 , 0xFF8C1D20 , 0xFFC94337 , 0xFFEC633D , 0xFFF0653D , 0xFFEF643C , 0xFFEF643C , 0xFFEF643C , 0xFFEE633C , 0xFFEF643C , 0xFFEE633B , 0xFFEE633C , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFED623B , 0xFFED623C , 0xFFEC613B , 0xFFED613C , 0xFFEC613B , 0xFFEC613B , 0xFFEB603B , 0xFFEB603A , 0xFFEC603B , 0xFFEB5F3A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEB5F3B , 0xFFEA5E3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95E3A , 0xFFE85D3A , 0xFFE95D3A , 0xFFE85D39 , 0xFFE85D3A , 0xFFE85C39 , 0xFFE75C39 , 0xFFEF937C , 0xFFF4B3A3 , 0xFFF7C7BC , 0xFFF9D6CE , 0xFFFBE4DF , 0xFFFCECE8 , 0xFFFDF4F2 , 0xFFFEFCFB , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFE7694C , 0xFFE45839 , 0xFFE45838 , 0xFFE35838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15537 , 0xFFE15538 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5437 , 0xFFDF5336 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDE5136 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5035 , 0xFFDD5036 , 0xFFDC4F35 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDB4E36 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFC33A33 , 0xFFC0332E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF651417 , 0xFF671417 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF8B1C20 , 0xFFC9463A , 0xFFEE653E , 0xFFF0653D , 0xFFF0653D , 0xFFEF643D , 0xFFEF643C , 0xFFEF643C , 0xFFEF643C , 0xFFEF633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED613C , 0xFFEC613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFE95E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFF7C7BC , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFE66548 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDA4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD64D37 , 0xFFB92E30 , 0xFFC93D32 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641316 , 0xFF641417 , 0xFF661417 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF681518 , 0xFF681518 , 0xFF891C1F , 0xFFC84337 , 0xFFEE653E , 0xFFF0653D , 0xFFEF643C , 0xFFEF643C , 0xFFEE633C , 0xFFEE633B , 0xFFEF633C , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFEE633C , 0xFFED623B , 0xFFED623C , 0xFFED613B , 0xFFEC613B , 0xFFEC613C , 0xFFEC613B , 0xFFEC613B , 0xFFEB603A , 0xFFEC603B , 0xFFEB603A , 0xFFEB5F3A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFEA5E3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFE95E3B , 0xFFE95D3A , 0xFFE85D39 , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85D3A , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75B39 , 0xFFF6C2B6 , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFDF4F2 , 0xFFE56245 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE35638 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE15537 , 0xFFE05437 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5336 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5236 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFC84137 , 0xFFBF312E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF651417 , 0xFF671417 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF681518 , 0xFF841A1E , 0xFFC53F35 , 0xFFEE623C , 0xFFF0653D , 0xFFEF643D , 0xFFEF643C , 0xFFEF643C , 0xFFEF643C , 0xFFEF633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFEC613B , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFEA5E3B , 0xFFE95E3B , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFF4B6A7 , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFDF1EF , 0xFFE56144 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDD5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD64C36 , 0xFFBC302F , 0xFFC83D32 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF651417 , 0xFF671417 , 0xFF671417 , 0xFF681518 , 0xFF671417 , 0xFF7B191C , 0xFFBD3B36 , 0xFFEB623E , 0xFFF0653D , 0xFFEF643C , 0xFFEF643C , 0xFFEE633C , 0xFFEF643C , 0xFFEE633B , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFEE623C , 0xFFED623B , 0xFFED623C , 0xFFEC613B , 0xFFED613C , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603A , 0xFFEB603B , 0xFFEB5F3A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE85D3A , 0xFFE95D3A , 0xFFE85D39 , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFF3B1A2 , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFBE7E3 , 0xFFE45E41 , 0xFFE35738 , 0xFFE25637 , 0xFFE25637 , 0xFFE25638 , 0xFFE15637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE15438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDC4F35 , 0xFFDB4F35 , 0xFFDC4F36 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E36 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD94C35 , 0xFFD84B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFC84136 , 0xFFBF322E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF661417 , 0xFF671417 , 0xFF72171A , 0xFFB4312F , 0xFFE8623F , 0xFFEF643D , 0xFFEF643C , 0xFFEF643C , 0xFFEF643C , 0xFFEF633C , 0xFFEF633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE633C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFEC613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B3A , 0xFFE65B39 , 0xFFF1A593 , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFBE5E0 , 0xFFE45D3F , 0xFFE35738 , 0xFFE35638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD34C37 , 0xFFB92F2F , 0xFFC73B31 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF681417 , 0xFFA72527 , 0xFFE45B3C , 0xFFEF643C , 0xFFEF643C , 0xFFEF643C , 0xFFEE633B , 0xFFEF633C , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFED623B , 0xFFED623C , 0xFFED613B , 0xFFED623C , 0xFFEC613B , 0xFFEC613C , 0xFFEC603B , 0xFFEC613B , 0xFFEB603A , 0xFFEB603A , 0xFFEB603B , 0xFFEB5F3A , 0xFFEB5F3B , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFEA5E3A , 0xFFE95E3A , 0xFFEA5E3B , 0xFFE95D3A , 0xFFE95E3A , 0xFFE85D39 , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85D3A , 0xFFE75C39 , 0xFFE75C39 , 0xFFE75C3A , 0xFFE65B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65B39 , 0xFFE55A39 , 0xFFE55A39 , 0xFFF09F8D , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFF9DAD4 , 0xFFE35A3C , 0xFFE25638 , 0xFFE25637 , 0xFFE15537 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5336 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDC4F35 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD64A33 , 0xFFD64A33 , 0xFFC23A34 , 0xFFC2352F , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF651417 , 0xFF941F23 , 0xFFD9513A , 0xFFEF643C , 0xFFEE643C , 0xFFEE633B , 0xFFEF643C , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFEE623C , 0xFFED623B , 0xFFED613B , 0xFFED623C , 0xFFEC613B , 0xFFEC613C , 0xFFEC603B , 0xFFEC613B , 0xFFEB603A , 0xFFEC603B , 0xFFEB5F3A , 0xFFEB5F3A , 0xFFEB5F3B , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFEA5E3A , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95E3A , 0xFFE85D3A , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85D3A , 0xFFE75C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A38 , 0xFFE55938 , 0xFFEE9681 , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFF8D8D1 , 0xFFE3593B , 0xFFE25638 , 0xFFE15537 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE15438 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5236 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDE5136 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5136 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDC4F35 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDB4E35 , 0xFFDA4E35 , 0xFFDA4E36 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94D35 , 0xFFD94C34 , 0xFFD84C34 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD84C35 , 0xFFD74B34 , 0xFFD74B35 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A33 , 0xFFD64933 , 0xFFCF4232 , 0xFFBC2E2D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF801A1D , 0xFFC84439 , 0xFFEE643D , 0xFFEF643C , 0xFFEF643C , 0xFFEF633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED613C , 0xFFEC613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE55939 , 0xFFED8C76 , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFF7CEC6 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDD5137 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD44935 , 0xFFBA3031 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF6D1519 , 0xFFB3312F , 0xFFE9623E , 0xFFEE633C , 0xFFEF633C , 0xFFEE633B , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFEE623C , 0xFFED623B , 0xFFED623C , 0xFFEC613B , 0xFFEC613B , 0xFFEC613B , 0xFFEB603B , 0xFFEC613B , 0xFFEB603A , 0xFFEC603B , 0xFFEB5F3A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE85D3A , 0xFFE85D39 , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85D3A , 0xFFE75C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65B39 , 0xFFE65B39 , 0xFFE55A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55A39 , 0xFFE55938 , 0xFFE45938 , 0xFFEC866F , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFF6CCC3 , 0xFFE15537 , 0xFFE15538 , 0xFFE15537 , 0xFFE05437 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5336 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDC4F35 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDA4E35 , 0xFFDB4E36 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84B34 , 0xFFD84B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD64A34 , 0xFFD74A34 , 0xFFD64A33 , 0xFFD64A34 , 0xFFD54933 , 0xFFD54933 , 0xFFD54934 , 0xFFC03A35 , 0xFFC4382F , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF9A2124 , 0xFFDE573B , 0xFFEF643C , 0xFFEF643C , 0xFFEF633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFEA5E3B , 0xFFE95E3B , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFEA7A61 , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFF4BEB3 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDD5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54934 , 0xFFD54834 , 0xFFC94136 , 0xFFC1332E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF7D191C , 0xFFCC4234 , 0xFFEE633B , 0xFFEF633C , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFED623B , 0xFFED623C , 0xFFED613B , 0xFFED623C , 0xFFEC613B , 0xFFEC613C , 0xFFEC603B , 0xFFEB603A , 0xFFEC603B , 0xFFEB603A , 0xFFEB603B , 0xFFEB5F3A , 0xFFEB5F3B , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFEA5E3B , 0xFFE95D3A , 0xFFE95E3A , 0xFFE85D39 , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75C3A , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE65B39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45838 , 0xFFE8765C , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFF3BBAF , 0xFFE05437 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDF5236 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5137 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDC4F35 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDB4E35 , 0xFFDB4F36 , 0xFFDA4E35 , 0xFFDA4E36 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94C34 , 0xFFD94D35 , 0xFFD84C34 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD84C35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74B34 , 0xFFD64A33 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54934 , 0xFFD54833 , 0xFFD44833 , 0xFFD44834 , 0xFFD04533 , 0xFFBC2E2D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF671417 , 0xFFAB2C2E , 0xFFE9613D , 0xFFEF633C , 0xFFEE633C , 0xFFEE633C , 0xFFEE633C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED613C , 0xFFEC613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFE95E3B , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45939 , 0xFFE45839 , 0xFFE45839 , 0xFFE6694D , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFF1AFA2 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDD5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44833 , 0xFFD44733 , 0xFFD24733 , 0xFFBA3232 , 0xFFC83D31 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF881C1F , 0xFFD3503D , 0xFFEE633C , 0xFFEE633B , 0xFFEE633C , 0xFFED623B , 0xFFEE623C , 0xFFED623B , 0xFFEC613B , 0xFFED623C , 0xFFEC613B , 0xFFEC613B , 0xFFEB603B , 0xFFEC603B , 0xFFEB603A , 0xFFEB603A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEB5F3B , 0xFFEA5E3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFEA5E3B , 0xFFE95D3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D39 , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75C39 , 0xFFE75B39 , 0xFFE75C3A , 0xFFE65B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55938 , 0xFFE55939 , 0xFFE45838 , 0xFFE55939 , 0xFFE45838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE5664A , 0xFFFEF9F8 , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFF0AA9C , 0xFFDF5437 , 0xFFE05437 , 0xFFDF5336 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDF5237 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5137 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94D35 , 0xFFD84C34 , 0xFFD84C34 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD64A34 , 0xFFD64A33 , 0xFFD64A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54934 , 0xFFD44833 , 0xFFD54834 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34733 , 0xFFBB3333 , 0xFFC83C31 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF6B1518 , 0xFFB42F2E , 0xFFEB633E , 0xFFEE633C , 0xFFEE633C , 0xFFEE623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED613C , 0xFFEC613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35838 , 0xFFE35738 , 0xFFE56346 , 0xFFFDF2EF , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFED9F8F , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDD5137 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDA4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD74B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34633 , 0xFFBF3531 , 0xFFC83D31 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF8C1C20 , 0xFFD94C35 , 0xFFED623B , 0xFFEE633C , 0xFFED623B , 0xFFED623C , 0xFFEC613B , 0xFFED623C , 0xFFEC613B , 0xFFEC613B , 0xFFEC613B , 0xFFEB603A , 0xFFEC603B , 0xFFEB603A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEA5F3A , 0xFFEB5F3B , 0xFFEA5E3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFE95E3B , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D39 , 0xFFE85C39 , 0xFFE85D3A , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75C3A , 0xFFE75B39 , 0xFFE65B39 , 0xFFE65B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A38 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45938 , 0xFFE45838 , 0xFFE45939 , 0xFFE35838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25738 , 0xFFE25637 , 0xFFE46144 , 0xFFFCECE9 , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFEC9988 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDF5236 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDC4F35 , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDC4F36 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4E35 , 0xFFD94D34 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD74B34 , 0xFFD84B35 , 0xFFD74A34 , 0xFFD74B34 , 0xFFD64A33 , 0xFFD74A34 , 0xFFD64933 , 0xFFD54933 , 0xFFD64934 , 0xFFD54833 , 0xFFD54834 , 0xFFD44833 , 0xFFD44834 , 0xFFD44733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34632 , 0xFFD34633 , 0xFFD24532 , 0xFFC3342E , 0xFFC3362F , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF6A1518 , 0xFFB3312F , 0xFFEB613C , 0xFFED623B , 0xFFED623C , 0xFFED613B , 0xFFED623C , 0xFFEC613B , 0xFFEC613C , 0xFFEC603B , 0xFFEB603B , 0xFFEC603B , 0xFFEB603A , 0xFFEB603B , 0xFFEB5F3A , 0xFFEB5F3B , 0xFFEA5F3A , 0xFFEA5E3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFEA5E3B , 0xFFE95D3A , 0xFFE95E3A , 0xFFE85D39 , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75C39 , 0xFFE75C3A , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65B39 , 0xFFE55A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55A39 , 0xFFE45938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE25637 , 0xFFE35E41 , 0xFFFBE7E3 , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFEA8F7D , 0xFFDF5236 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDC4F35 , 0xFFDB4F35 , 0xFFDC4F36 , 0xFFDB4E35 , 0xFFDB4F36 , 0xFFDA4E35 , 0xFFDA4E36 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94D35 , 0xFFD84C34 , 0xFFD94C35 , 0xFFD84B34 , 0xFFD84C35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD64A34 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64A34 , 0xFFD54933 , 0xFFD54933 , 0xFFD54934 , 0xFFD44833 , 0xFFD54834 , 0xFFD44733 , 0xFFD44733 , 0xFFD34732 , 0xFFD44733 , 0xFFD34632 , 0xFFD24632 , 0xFFD34633 , 0xFFD24532 , 0xFFC33B34 , 0xFFC0332E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF841A1E , 0xFFD24F3C , 0xFFEE623C , 0xFFED623C , 0xFFED623C , 0xFFED623C , 0xFFED613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFE95E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25A3D , 0xFFF9DED8 , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFCFC , 0xFFE98976 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDA4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD34733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24533 , 0xFFD24533 , 0xFFC3413A , 0xFFC0332E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFFA92A2B , 0xFFE65F3D , 0xFFED623C , 0xFFEC613B , 0xFFED613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603A , 0xFFEB603A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEB5F3B , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95E3B , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D39 , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75C39 , 0xFFE75B39 , 0xFFE75C3A , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE65B39 , 0xFFE55A39 , 0xFFE55A38 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25738 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE25637 , 0xFFE15537 , 0xFFE2593C , 0xFFF9DBD5 , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFE7806B , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDC4F35 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD94C35 , 0xFFD84B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD64A34 , 0xFFD64A33 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54934 , 0xFFD54833 , 0xFFD44833 , 0xFFD44834 , 0xFFD44733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34733 , 0xFFD34632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFC43D35 , 0xFFC0332E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF75171B , 0xFFC84035 , 0xFFEC623C , 0xFFED623C , 0xFFED613C , 0xFFEC613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFF7D1CA , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFCFC , 0xFFE57762 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34733 , 0xFFD34633 , 0xFFD34633 , 0xFFD24633 , 0xFFD24533 , 0xFFD24533 , 0xFFD14533 , 0xFFD14432 , 0xFFC43830 , 0xFFC0332E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF641417 , 0xFF921D21 , 0xFFDF573B , 0xFFEC613B , 0xFFED613C , 0xFFEC613B , 0xFFEC613B , 0xFFEB603A , 0xFFEC603B , 0xFFEB603A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFEA5E3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFE95E3B , 0xFFE95D3A , 0xFFE85D3A , 0xFFE95D3A , 0xFFE85D39 , 0xFFE85D3A , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75C39 , 0xFFE75C3A , 0xFFE75B39 , 0xFFE65B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A38 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45939 , 0xFFE45838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25738 , 0xFFE25637 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE25638 , 0xFFE15537 , 0xFFE15537 , 0xFFE15538 , 0xFFF6CDC5 , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFE3705A , 0xFFDD5136 , 0xFFDD5137 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDC4F36 , 0xFFDB4E35 , 0xFFDB4F36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94D35 , 0xFFD84C34 , 0xFFD84C34 , 0xFFD84C35 , 0xFFD74B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD64A34 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64933 , 0xFFD64934 , 0xFFD54833 , 0xFFD54934 , 0xFFD44833 , 0xFFD54834 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34633 , 0xFFD24632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04331 , 0xFFC23731 , 0xFFC0322E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF651417 , 0xFFB13031 , 0xFFEA613D , 0xFFEC613C , 0xFFEC613B , 0xFFEC613B , 0xFFEC613B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15438 , 0xFFF4C2B7 , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFE1664E , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD74B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34633 , 0xFFD34633 , 0xFFD24633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFC03733 , 0xFFC63930 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF73171A , 0xFFC84439 , 0xFFEC613C , 0xFFEC603B , 0xFFEC613B , 0xFFEB603A , 0xFFEC603B , 0xFFEB5F3A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEB5F3B , 0xFFEA5E3A , 0xFFEA5E3A , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D39 , 0xFFE85C39 , 0xFFE85D3A , 0xFFE75C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75C3A , 0xFFE65B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A38 , 0xFFE55A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45938 , 0xFFE45838 , 0xFFE45839 , 0xFFE35838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25738 , 0xFFE35738 , 0xFFE25637 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFF2BAAE , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFE06048 , 0xFFDC5036 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDC4F35 , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD74B34 , 0xFFD84B35 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A33 , 0xFFD64A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54833 , 0xFFD54834 , 0xFFD44833 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24533 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD04331 , 0xFFD04332 , 0xFFD04331 , 0xFFBD312F , 0xFFC63A30 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF891C1F , 0xFFD8533D , 0xFFEB603B , 0xFFEB603A , 0xFFEC603B , 0xFFEB5F3A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEB5F3B , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFEA5E3B , 0xFFE95D3A , 0xFFE95E3A , 0xFFE85D39 , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75C39 , 0xFFE75C3A , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65B39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE25637 , 0xFFE15537 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE15538 , 0xFFE05437 , 0xFFDF5437 , 0xFFE05437 , 0xFFF1B2A5 , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFDD543A , 0xFFDC5035 , 0xFFDC5036 , 0xFFDC4F35 , 0xFFDB4F35 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDA4E35 , 0xFFDA4E36 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94C34 , 0xFFD94D35 , 0xFFD84C34 , 0xFFD94C35 , 0xFFD84B34 , 0xFFD84C35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74B34 , 0xFFD64A34 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54934 , 0xFFD54833 , 0xFFD54833 , 0xFFD54834 , 0xFFD44733 , 0xFFD44733 , 0xFFD34732 , 0xFFD44733 , 0xFFD34632 , 0xFFD24632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4232 , 0xFFBA2D2D , 0xFFC63A30 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF9E2125 , 0xFFE75D3B , 0xFFEC603B , 0xFFEC603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFE95E3B , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFEFA799 , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCE4232 , 0xFFBA3030 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF681418 , 0xFFB3302F , 0xFFEC603B , 0xFFEB603A , 0xFFEB5F3A , 0xFFEB603B , 0xFFEA5F3A , 0xFFEB5F3B , 0xFFEA5E3A , 0xFFEA5F3B , 0xFFE95E3A , 0xFFEA5E3B , 0xFFE95D3A , 0xFFE85D3A , 0xFFE95D3A , 0xFFE85D39 , 0xFFE85D3A , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75C39 , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE65B39 , 0xFFE55A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45939 , 0xFFE45838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25738 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE15637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5437 , 0xFFE05437 , 0xFFDF5336 , 0xFFDF5336 , 0xFFDF5337 , 0xFFEDA192 , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFCF0EE , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94D35 , 0xFFD84C34 , 0xFFD84C34 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD64A34 , 0xFFD64A33 , 0xFFD64A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54934 , 0xFFD54833 , 0xFFD54834 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34732 , 0xFFD34733 , 0xFFD34632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCA4235 , 0xFFBB2C2C , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF6F1619 , 0xFFC54038 , 0xFFEC603B , 0xFFEB603B , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFE95E3B , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFEB9483 , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFBECE9 , 0xFFDC4F36 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD74B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24633 , 0xFFD24533 , 0xFFD24533 , 0xFFD14533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFC53930 , 0xFFC0322E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF7C181C , 0xFFCE4A3B , 0xFFEB603B , 0xFFEA5F3A , 0xFFEA5F3A , 0xFFEA5F3B , 0xFFEA5E3A , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D39 , 0xFFE85C39 , 0xFFE85D3A , 0xFFE85C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75C3A , 0xFFE65B39 , 0xFFE65B39 , 0xFFE65B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45938 , 0xFFE45838 , 0xFFE45839 , 0xFFE45838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25738 , 0xFFE25637 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE25538 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFE05437 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDF5236 , 0xFFDE5236 , 0xFFDE5237 , 0xFFEA907E , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFF8DFDB , 0xFFDC4F36 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD94C35 , 0xFFD84B34 , 0xFFD74B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD64A34 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64933 , 0xFFD64934 , 0xFFD54833 , 0xFFD54834 , 0xFFD44833 , 0xFFD54834 , 0xFFD44733 , 0xFFD44733 , 0xFFD34732 , 0xFFD34632 , 0xFFD34633 , 0xFFD24632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCF4231 , 0xFFCE4131 , 0xFFCE4132 , 0xFFBF332F , 0xFFC3362E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF871B1F , 0xFFD7523C , 0xFFEB5F3B , 0xFFEB5F3B , 0xFFEA5F3B , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFE7836F , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFF8DDD8 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD34733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14332 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCC4132 , 0xFFB92E2F , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF921E22 , 0xFFDE5338 , 0xFFEA5F3B , 0xFFEA5E3A , 0xFFE95E3A , 0xFFEA5E3B , 0xFFE95D3A , 0xFFE95E3A , 0xFFE85D3A , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85D3A , 0xFFE85C39 , 0xFFE75C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE55A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45839 , 0xFFE45838 , 0xFFE35838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE35738 , 0xFFE25637 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFDF5336 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDE5236 , 0xFFDD5136 , 0xFFDE5137 , 0xFFE57B67 , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFF5CDC6 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFD94D34 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A33 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54833 , 0xFFD54834 , 0xFFD44733 , 0xFFD44834 , 0xFFD44733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34733 , 0xFFD34632 , 0xFFD24632 , 0xFFD24633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD04331 , 0xFFD04332 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCD4131 , 0xFFC93E31 , 0xFFBC2E2D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF982225 , 0xFFE0593D , 0xFFEA5F3B , 0xFFEA5E3B , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDD5136 , 0xFFE3725D , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFF4CAC3 , 0xFFDA4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD74B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14532 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4031 , 0xFFC13630 , 0xFFC1332E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF9F2428 , 0xFFE05C3F , 0xFFEA5E3B , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D39 , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85D3A , 0xFFE75C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55938 , 0xFFE55939 , 0xFFE45938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45839 , 0xFFE35838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE35638 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDE5136 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFE16851 , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFF1BEB5 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84B34 , 0xFFD84C35 , 0xFFD74B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD64A33 , 0xFFD64A33 , 0xFFD64A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54833 , 0xFFD54834 , 0xFFD44833 , 0xFFD44833 , 0xFFD44833 , 0xFFD34733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34633 , 0xFFD24632 , 0xFFD34633 , 0xFFD24532 , 0xFFD14532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04331 , 0xFFD14332 , 0xFFD04331 , 0xFFD04331 , 0xFFD04232 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCC4032 , 0xFFBB2E2E , 0xFFC3372F , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFFA12628 , 0xFFE35F40 , 0xFFE95E3B , 0xFFE95D3A , 0xFFE85D3A , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85D3A , 0xFFE75C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75C3A , 0xFFE65B39 , 0xFFE65B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A38 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45939 , 0xFFE45838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE25638 , 0xFFE15537 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDF5236 , 0xFFDE5236 , 0xFFDF5237 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5137 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDD5036 , 0xFFE0624A , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFF1BBB2 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94D35 , 0xFFD94C34 , 0xFFD84C34 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD64A34 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54934 , 0xFFD54833 , 0xFFD54834 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34733 , 0xFFD34632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14532 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCE4031 , 0xFFCD4030 , 0xFFC63D33 , 0xFFBB2E2D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFFA12629 , 0xFFE26041 , 0xFFE95E3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDD553C , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFEDADA2 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD84B35 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24633 , 0xFFD24533 , 0xFFD24533 , 0xFFD14533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD14332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFBD2F2D , 0xFFC0332E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFFA12325 , 0xFFE25738 , 0xFFE95D3A , 0xFFE85C39 , 0xFFE85C39 , 0xFFE85D3A , 0xFFE75C39 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45838 , 0xFFE45839 , 0xFFE35838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25738 , 0xFFE35738 , 0xFFE25637 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDF5237 , 0xFFDE5236 , 0xFFDD5136 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDC5239 , 0xFFFEFAFA , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFEDA99E , 0xFFD94C35 , 0xFFD84C34 , 0xFFD94C35 , 0xFFD84B34 , 0xFFD74B34 , 0xFFD84B35 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54833 , 0xFFD54834 , 0xFFD44833 , 0xFFD54834 , 0xFFD44733 , 0xFFD44733 , 0xFFD34732 , 0xFFD34632 , 0xFFD34633 , 0xFFD24632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14532 , 0xFFD14533 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCF4231 , 0xFFCE4131 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCD3F30 , 0xFFCD3F31 , 0xFFC93E32 , 0xFFBA2D2D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF9A2225 , 0xFFDF583C , 0xFFE95D3A , 0xFFE85D3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDC4F36 , 0xFFDC5138 , 0xFFFCEEEC , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFEF8F8 , 0xFFFCEFEE , 0xFFE89486 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD74B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44834 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34733 , 0xFFD34633 , 0xFFD34633 , 0xFFD24633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFBF3633 , 0xFFC0332E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF932023 , 0xFFDC543B , 0xFFE85D3A , 0xFFE75C39 , 0xFFE75C39 , 0xFFE75C3A , 0xFFE75B39 , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A38 , 0xFFE55938 , 0xFFE55939 , 0xFFE55938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45839 , 0xFFE35838 , 0xFFE35738 , 0xFFE35839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15537 , 0xFFE15538 , 0xFFE05537 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFDF5336 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDF5237 , 0xFFDE5136 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDB5038 , 0xFFF9E2DF , 0xFFFAE7E4 , 0xFFF5CFC8 , 0xFFEFB6AC , 0xFFEA9C8F , 0xFFE58272 , 0xFFE06E5A , 0xFFDC5E48 , 0xFFD94E38 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A33 , 0xFFD64A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54934 , 0xFFD44833 , 0xFFD44833 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34633 , 0xFFD34632 , 0xFFD24632 , 0xFFD24633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCF4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCD3F31 , 0xFFCC3F30 , 0xFFC93E32 , 0xFFB92D2E , 0xFFC2362F , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF8A1B1F , 0xFFD64F39 , 0xFFE85C3A , 0xFFE85C3A , 0xFFE75C3A , 0xFFE75C3A , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDC553E , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD74B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54834 , 0xFFD54834 , 0xFFD54834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCB3F31 , 0xFFBF322E , 0xFFC0332E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF7E191D , 0xFFD04534 , 0xFFE85C3A , 0xFFE75B39 , 0xFFE65B39 , 0xFFE75B3A , 0xFFE65A39 , 0xFFE65B39 , 0xFFE55A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55A39 , 0xFFE55938 , 0xFFE45938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45839 , 0xFFE35738 , 0xFFE45839 , 0xFFE35738 , 0xFFE25738 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE15537 , 0xFFE05437 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5336 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5236 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDC4F35 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDB4E35 , 0xFFDA4E35 , 0xFFDA4E36 , 0xFFDA4D35 , 0xFFDA4E35 , 0xFFD94D34 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD84B34 , 0xFFD84C35 , 0xFFD74B34 , 0xFFD84B35 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A33 , 0xFFD64933 , 0xFFD64A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54833 , 0xFFD54934 , 0xFFD44833 , 0xFFD54834 , 0xFFD44733 , 0xFFD34733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34633 , 0xFFD24632 , 0xFFD34633 , 0xFFD24532 , 0xFFD14532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCC3E31 , 0xFFC73E33 , 0xFFB92C2D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF71161A , 0xFFC53D35 , 0xFFE75C3A , 0xFFE65B39 , 0xFFE65B39 , 0xFFE65B3A , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A38 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45838 , 0xFFE45839 , 0xFFE35838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25738 , 0xFFE25637 , 0xFFE35638 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE25538 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5437 , 0xFFE05437 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDF5236 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDC4F36 , 0xFFDB4E35 , 0xFFDB4F36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD94C35 , 0xFFD84B34 , 0xFFD84B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD64A34 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54934 , 0xFFD44833 , 0xFFD54834 , 0xFFD44733 , 0xFFD44733 , 0xFFD34733 , 0xFFD34632 , 0xFFD34633 , 0xFFD34632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14532 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCF4231 , 0xFFCE4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCE4031 , 0xFFCD4030 , 0xFFCD3F30 , 0xFFCD3F31 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3D31 , 0xFFBB3030 , 0xFFBF312D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF691518 , 0xFFB33231 , 0xFFE75B3A , 0xFFE75B3A , 0xFFE65B39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94D35 , 0xFFDB5741 , 0xFFE48070 , 0xFFECA498 , 0xFFECAAA0 , 0xFFE8998D , 0xFFDE6754 , 0xFFD74C36 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44834 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24633 , 0xFFD24533 , 0xFFD24533 , 0xFFD14533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFD04232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCB3E30 , 0xFFC3362F , 0xFFBB2C2C , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF9F2225 , 0xFFE2583B , 0xFFE65A39 , 0xFFE55A39 , 0xFFE65A39 , 0xFFE55938 , 0xFFE55A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45939 , 0xFFE35838 , 0xFFE35838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE35738 , 0xFFE25637 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5336 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDF5237 , 0xFFDE5236 , 0xFFDE5136 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFD94D34 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94F37 , 0xFFE99A8D , 0xFFFBEAE8 , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFDF7F7 , 0xFFECACA2 , 0xFFD74B35 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54833 , 0xFFD54934 , 0xFFD44833 , 0xFFD54834 , 0xFFD44733 , 0xFFD44733 , 0xFFD34732 , 0xFFD34733 , 0xFFD34632 , 0xFFD24632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14533 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCD4030 , 0xFFCD3F31 , 0xFFCC3F30 , 0xFFCC3E30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFC83D32 , 0xFFB92B2C , 0xFFC1342E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF891B1F , 0xFFD44A36 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE65A39 , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDD5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94D35 , 0xFFDA543E , 0xFFF3C7C0 , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFEBA79D , 0xFFD64A34 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD34733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCB3E31 , 0xFFCB3E30 , 0xFFCA3D2F , 0xFFBB302F , 0xFFBF312D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF711619 , 0xFFC33C34 , 0xFFE55A39 , 0xFFE55938 , 0xFFE55939 , 0xFFE45938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45839 , 0xFFE35838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFE05437 , 0xFFDF5336 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDE5136 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDB4E35 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94C34 , 0xFFD94E37 , 0xFFEFB5AC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFDF5F4 , 0xFFDB614F , 0xFFD54934 , 0xFFD44833 , 0xFFD44833 , 0xFFD44834 , 0xFFD44733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34633 , 0xFFD34632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCD3F31 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3D2F , 0xFFC1332D , 0xFFBB2C2C , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFFA8292B , 0xFFE1573A , 0xFFE55939 , 0xFFE55939 , 0xFFE55939 , 0xFFE45939 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFE37C6B , 0xFFFEF9F9 , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFE7998E , 0xFFD54834 , 0xFFD44834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24633 , 0xFFD24533 , 0xFFD24533 , 0xFFD14533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFD04232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFC53A31 , 0xFFB82A2C , 0xFFC0332E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF891B1F , 0xFFD24735 , 0xFFE45938 , 0xFFE55939 , 0xFFE45838 , 0xFFE45839 , 0xFFE35738 , 0xFFE35839 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE25637 , 0xFFE25638 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5336 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDC5035 , 0xFFDD5036 , 0xFFDC4F35 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4E35 , 0xFFD94D34 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD84C35 , 0xFFF3C6BF , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFEFBCB5 , 0xFFD44834 , 0xFFD44733 , 0xFFD34733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34633 , 0xFFD24632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04331 , 0xFFD14432 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCD3F30 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCC3E30 , 0xFFCC3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3D2F , 0xFFCA3D2F , 0xFFC83B30 , 0xFFB82C2D , 0xFFC1332D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF6D1519 , 0xFFBA312E , 0xFFE35839 , 0xFFE45839 , 0xFFE45839 , 0xFFE45839 , 0xFFE35839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDD5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDA4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFDB5D48 , 0xFFFBEEEC , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFF2C8C2 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFC93B2F , 0xFFBA2C2C , 0xFFBE302D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF951F23 , 0xFFD5503C , 0xFFE45839 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE25637 , 0xFFE15537 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE15438 , 0xFFE05437 , 0xFFDF5437 , 0xFFE05437 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDF5236 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDE5136 , 0xFFDD5136 , 0xFFDD5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5035 , 0xFFDD5036 , 0xFFDC4F35 , 0xFFDB4F35 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDA4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFD94D34 , 0xFFD94D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84B34 , 0xFFD84C35 , 0xFFD74B34 , 0xFFDF6E5C , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFDFD , 0xFFF0C2BC , 0xFFD44733 , 0xFFD34632 , 0xFFD34632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD04331 , 0xFFD04332 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4231 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCD3F31 , 0xFFCC3F30 , 0xFFCB3E30 , 0xFFCC3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3D2F , 0xFFCB3D30 , 0xFFC93C30 , 0xFFBB3130 , 0xFFBE302D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF631316 , 0xFF641417 , 0xFF631316 , 0xFF641417 , 0xFF71161A , 0xFFBB3430 , 0xFFE25638 , 0xFFE35738 , 0xFFE35738 , 0xFFE25637 , 0xFFE35738 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15537 , 0xFFE15538 , 0xFFE05537 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5337 , 0xFFDF5336 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDF5237 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDD5036 , 0xFFDC5035 , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFE27A6B , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFCFC , 0xFFFEFDFD , 0xFFFEFCFC , 0xFFFEFDFD , 0xFFE9A39A , 0xFFD34733 , 0xFFD34632 , 0xFFD34632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14532 , 0xFFD14533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3D30 , 0xFFCB3D30 , 0xFFCA3D2F , 0xFFC93C30 , 0xFFBD3432 , 0xFFBA2B2B , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF641417 , 0xFF951E22 , 0xFFD34936 , 0xFFE35738 , 0xFFE35738 , 0xFFE35738 , 0xFFE25638 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDA4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD74B35 , 0xFFD74B34 , 0xFFDF705E , 0xFFFFFCFC , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFEFDFD , 0xFFFEFDFD , 0xFFFEFDFD , 0xFFFDFCFC , 0xFFDD7161 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD14332 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFCA3D30 , 0xFFC93C2F , 0xFFBF302C , 0xFFBA2C2C , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF651417 , 0xFF641417 , 0xFF631316 , 0xFF6D1619 , 0xFFB32F2F , 0xFFDF5639 , 0xFFE25638 , 0xFFE25637 , 0xFFE25638 , 0xFFE15537 , 0xFFE15538 , 0xFFE15537 , 0xFFE05437 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5336 , 0xFFE05337 , 0xFFDF5336 , 0xFFDF5236 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDE5136 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDC5035 , 0xFFDD5036 , 0xFFDC4F35 , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDB4E35 , 0xFFDA4E35 , 0xFFDB4E36 , 0xFFDA4D35 , 0xFFDA4E35 , 0xFFD94D34 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD84B34 , 0xFFD84C35 , 0xFFD74B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD64A33 , 0xFFDB5D49 , 0xFFFCEFEE , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFDFCFC , 0xFFFEFDFD , 0xFFFDFCFC , 0xFFF4D3CF , 0xFFD44A37 , 0xFFD34633 , 0xFFD24532 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4031 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCD3F31 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3D30 , 0xFFCA3D2F , 0xFFCB3D30 , 0xFFCA3C2F , 0xFFC93E31 , 0xFFBD3532 , 0xFFBA2B2B , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF6A1518 , 0xFF661417 , 0xFF641417 , 0xFF841A1E , 0xFFC73E34 , 0xFFE15538 , 0xFFE25638 , 0xFFE25638 , 0xFFE15538 , 0xFFE15538 , 0xFFE15538 , 0xFFE05438 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDD5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDA4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD74B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFF2C5BE , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFFFDFD , 0xFFFEFDFD , 0xFFFEFDFD , 0xFFFEFDFD , 0xFFFEFDFD , 0xFFFEFDFD , 0xFFFCF7F6 , 0xFFDC6F60 , 0xFFD34633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFD04232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFCA3D30 , 0xFFCA3D30 , 0xFFC93C2F , 0xFFBD312F , 0xFFBA2C2C , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF71181A , 0xFF671517 , 0xFF661417 , 0xFF9E2124 , 0xFFD54B37 , 0xFFE15537 , 0xFFE15538 , 0xFFE05437 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDD5036 , 0xFFDC4F35 , 0xFFDC4F35 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD74B34 , 0xFFD74B35 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A33 , 0xFFD64A34 , 0xFFD64933 , 0xFFD54933 , 0xFFDD6C5B , 0xFFFCF1F0 , 0xFFFFFDFD , 0xFFFEFCFC , 0xFFFEFDFD , 0xFFFEFCFC , 0xFFFEFDFD , 0xFFFDFCFC , 0xFFFDFCFC , 0xFFFCF5F4 , 0xFFE38C81 , 0xFFD24633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCF4231 , 0xFFCE4131 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCD3F30 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3D30 , 0xFFCB3D30 , 0xFFCA3D2F , 0xFFCA3C2F , 0xFFC83C31 , 0xFFBB2C2B , 0xFFBA2B2B , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF791B1C , 0xFF6A1618 , 0xFF6D1619 , 0xFFB22C2D , 0xFFDA523A , 0xFFE15538 , 0xFFE15538 , 0xFFE05437 , 0xFFE05437 , 0xFFE05437 , 0xFFE05337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD74B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFE17F71 , 0xFFFBEDEB , 0xFFFEFCFC , 0xFFFEFDFD , 0xFFFEFDFD , 0xFFFEFDFD , 0xFFFDFAFA , 0xFFF5DAD7 , 0xFFDE7769 , 0xFFD34633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD14332 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCB3E31 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFCB3D30 , 0xFFCA3D30 , 0xFFCA3C30 , 0xFFC73C31 , 0xFFBA2E2F , 0xFFBD2F2C , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF872020 , 0xFF751B1B , 0xFF7B181C , 0xFFBC3531 , 0xFFDE5337 , 0xFFE05437 , 0xFFE05437 , 0xFFDF5336 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDF5236 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5137 , 0xFFDD5036 , 0xFFDD5136 , 0xFFDC5035 , 0xFFDD5036 , 0xFFDC4F35 , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDB4E35 , 0xFFDB4F36 , 0xFFDA4E35 , 0xFFDB4E36 , 0xFFDA4D35 , 0xFFDA4E35 , 0xFFD94D34 , 0xFFD94D34 , 0xFFD94D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84B34 , 0xFFD84C35 , 0xFFD74B34 , 0xFFD84B35 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54833 , 0xFFD54833 , 0xFFD54834 , 0xFFD44733 , 0xFFD85A48 , 0xFFE6978C , 0xFFEFBEB7 , 0xFFF0C2BB , 0xFFEAAAA1 , 0xFFDE796B , 0xFFD44C3A , 0xFFD24633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD04331 , 0xFFD04332 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCD3F31 , 0xFFCC3F30 , 0xFFCC3E30 , 0xFFCC3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3D2F , 0xFFCB3D30 , 0xFFCA3C2F , 0xFFCA3D30 , 0xFFC53830 , 0xFFB82A2C , 0xFFBE2F2C , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF7E1E1E , 0xFF881B1F , 0xFFC33730 , 0xFFDE5438 , 0xFFE05437 , 0xFFDF5336 , 0xFFDF5336 , 0xFFDF5337 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDE5136 , 0xFFDE5237 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDD5036 , 0xFFDC4F35 , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDC4F36 , 0xFFDB4E35 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD64A34 , 0xFFD64A33 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54934 , 0xFFD44833 , 0xFFD44833 , 0xFFD54834 , 0xFFD44733 , 0xFFD44733 , 0xFFD34732 , 0xFFD34733 , 0xFFD34632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4031 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCD4030 , 0xFFCD3F31 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3D30 , 0xFFCB3D30 , 0xFFCA3D2F , 0xFFCA3D30 , 0xFFC93C2F , 0xFFC03430 , 0xFFB8292B , 0xFFC0322D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF952824 , 0xFF8F1E21 , 0xFFC33F37 , 0xFFDE5438 , 0xFFDF5337 , 0xFFDF5337 , 0xFFDF5237 , 0xFFDE5237 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDA4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD34733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCB3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFCA3D30 , 0xFFCA3D30 , 0xFFC83C31 , 0xFFBB3131 , 0xFFBA2C2C , 0xFFC0322D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF9E2B26 , 0xFFA22426 , 0xFFC63930 , 0xFFDD5237 , 0xFFDE5236 , 0xFFDE5237 , 0xFFDE5136 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5036 , 0xFFDC5035 , 0xFFDD5036 , 0xFFDC4F35 , 0xFFDC5036 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDB4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD84B34 , 0xFFD84C35 , 0xFFD74B34 , 0xFFD84B35 , 0xFFD74A34 , 0xFFD74B34 , 0xFFD64A33 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64933 , 0xFFD64934 , 0xFFD54833 , 0xFFD54934 , 0xFFD44833 , 0xFFD54834 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34633 , 0xFFD34632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14532 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4031 , 0xFFCE4031 , 0xFFCD4030 , 0xFFCD3F30 , 0xFFCD3F31 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E31 , 0xFFCB3D30 , 0xFFCA3D30 , 0xFFCB3D30 , 0xFFCA3C2F , 0xFFC93D30 , 0xFFC3362E , 0xFFB92A2C , 0xFFBC2E2C , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFB4352C , 0xFFA82527 , 0xFFC33932 , 0xFFDB5138 , 0xFFDE5237 , 0xFFDE5137 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD64934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFCA3D30 , 0xFFCA3D30 , 0xFFC83D31 , 0xFFBD312F , 0xFFB92A2B , 0xFFBF312D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFBF372F , 0xFFBB2E2C , 0xFFBD3432 , 0xFFD84F38 , 0xFFDD5136 , 0xFFDD5136 , 0xFFDC5035 , 0xFFDD5036 , 0xFFDC4F35 , 0xFFDB4F35 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4F36 , 0xFFDA4E35 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFD94D35 , 0xFFD94D34 , 0xFFD94D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84B34 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD74B34 , 0xFFD74B35 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A33 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54833 , 0xFFD54934 , 0xFFD44833 , 0xFFD44834 , 0xFFD44733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34632 , 0xFFD34633 , 0xFFD24632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14533 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCF4231 , 0xFFCE4131 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCD3F30 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCC3E30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3D30 , 0xFFCB3D30 , 0xFFCA3D2F , 0xFFCA3C2F , 0xFFC3352D , 0xFFB82C2D , 0xFFBC2E2C , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFBE302D , 0xFFBB2B2C , 0xFFD14835 , 0xFFDD5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC5036 , 0xFFDC4F36 , 0xFFDC4F36 , 0xFFDB4F36 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDA4E35 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD84B35 , 0xFFD74B34 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34733 , 0xFFD34633 , 0xFFD34633 , 0xFFD24633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCB3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFCA3D30 , 0xFFC53B31 , 0xFFBA2F2E , 0xFFBA2B2B , 0xFFBF312D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFC4372F , 0xFFB82A2C , 0xFFC73F36 , 0xFFD94E36 , 0xFFDC4F36 , 0xFFDB4F35 , 0xFFDB4E35 , 0xFFDB4F36 , 0xFFDA4E35 , 0xFFDA4E36 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD84C34 , 0xFFD94C35 , 0xFFD84B34 , 0xFFD84C35 , 0xFFD74B34 , 0xFFD84B35 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A33 , 0xFFD64A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54833 , 0xFFD54934 , 0xFFD44833 , 0xFFD44833 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34633 , 0xFFD24632 , 0xFFD24532 , 0xFFD24533 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCF4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCD3F31 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3D30 , 0xFFCB3D2F , 0xFFC7392F , 0xFFBC312F , 0xFFB82A2C , 0xFFBF312D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFC73A30 , 0xFFBC2E2D , 0xFFBD302E , 0xFFD24735 , 0xFFDB4F36 , 0xFFDB4E36 , 0xFFDB4E36 , 0xFFDA4E36 , 0xFFDA4E35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D35 , 0xFFD94D35 , 0xFFD94C35 , 0xFFD94C35 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD74B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44834 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFD04232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCC3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3E30 , 0xFFC73D33 , 0xFFBE3532 , 0xFFB92A2B , 0xFFBD2F2D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFC2352F , 0xFFB7282C , 0xFFC23A34 , 0xFFD64D38 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFDA4D35 , 0xFFD94D34 , 0xFFD94D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84B34 , 0xFFD84B34 , 0xFFD84C35 , 0xFFD74B34 , 0xFFD74B35 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A33 , 0xFFD64933 , 0xFFD64A34 , 0xFFD54933 , 0xFFD64934 , 0xFFD54833 , 0xFFD54834 , 0xFFD44833 , 0xFFD44834 , 0xFFD44733 , 0xFFD34733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34633 , 0xFFD24632 , 0xFFD34633 , 0xFFD24532 , 0xFFD14532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04331 , 0xFFD14432 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCD3F31 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3D30 , 0xFFC73C30 , 0xFFBD312E , 0xFFB82B2D , 0xFFBD2F2D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFC63A30 , 0xFFBF312D , 0xFFB82A2C , 0xFFC63B32 , 0xFFD54B36 , 0xFFDA4D35 , 0xFFD94C34 , 0xFFD94C35 , 0xFFD84C34 , 0xFFD84C35 , 0xFFD84B34 , 0xFFD74B34 , 0xFFD84B35 , 0xFFD74A34 , 0xFFD74B34 , 0xFFD64A33 , 0xFFD74A34 , 0xFFD64933 , 0xFFD64933 , 0xFFD64934 , 0xFFD54833 , 0xFFD54934 , 0xFFD44833 , 0xFFD54834 , 0xFFD44733 , 0xFFD44733 , 0xFFD34732 , 0xFFD34632 , 0xFFD34733 , 0xFFD34632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14532 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFD04332 , 0xFFCF4231 , 0xFFCE4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCE4031 , 0xFFCD4030 , 0xFFCD3F30 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E31 , 0xFFCA3E31 , 0xFFC43A31 , 0xFFBB302F , 0xFFB7282A , 0xFFBE302D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFC63A30 , 0xFFBF312E , 0xFFB92C2D , 0xFFC43B33 , 0xFFD24936 , 0xFFD94B34 , 0xFFD84C35 , 0xFFD84C35 , 0xFFD84B35 , 0xFFD74B35 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD34733 , 0xFFD34633 , 0xFFD34633 , 0xFFD34633 , 0xFFD24633 , 0xFFD24533 , 0xFFD24533 , 0xFFD14533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCB3E31 , 0xFFC0322E , 0xFFB92D2E , 0xFFBA2B2C , 0xFFBE312D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFC53930 , 0xFFC0322E , 0xFFB8292C , 0xFFC0322F , 0xFFCC4335 , 0xFFD54B36 , 0xFFD74B34 , 0xFFD74A34 , 0xFFD74A34 , 0xFFD64A33 , 0xFFD64A34 , 0xFFD64933 , 0xFFD64934 , 0xFFD54933 , 0xFFD54833 , 0xFFD54834 , 0xFFD44833 , 0xFFD44834 , 0xFFD44733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34733 , 0xFFD34632 , 0xFFD24632 , 0xFFD24633 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD14332 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFB8282A , 0xFFC1332D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFC43830 , 0xFFC1342F , 0xFFBC2D2D , 0xFFB92D2E , 0xFFC33731 , 0xFFCE4434 , 0xFFD54934 , 0xFFD64A34 , 0xFFD64A34 , 0xFFD64934 , 0xFFD64934 , 0xFFD54934 , 0xFFD54834 , 0xFFD54834 , 0xFFD44833 , 0xFFD44733 , 0xFFD44733 , 0xFFD44733 , 0xFFD34733 , 0xFFD34633 , 0xFFD34633 , 0xFFD24633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD04332 , 0xFFD04332 , 0xFFD04332 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCC3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFBD2D2C , 0xFFBF312C , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFC63A30 , 0xFFC2342F , 0xFFBB2D2C , 0xFFB82C2E , 0xFFBF3532 , 0xFFC83E33 , 0xFFD04332 , 0xFFD44A35 , 0xFFD44833 , 0xFFD44833 , 0xFFD44833 , 0xFFD34733 , 0xFFD44733 , 0xFFD34632 , 0xFFD34733 , 0xFFD24632 , 0xFFD34633 , 0xFFD24532 , 0xFFD24532 , 0xFFD24533 , 0xFFD14432 , 0xFFD14432 , 0xFFD04432 , 0xFFD14432 , 0xFFD04331 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCD3F31 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3D30 , 0xFFCB3D30 , 0xFFCA3C2F , 0xFFC1332D , 0xFFBC2D2C , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFC63930 , 0xFFC4372F , 0xFFC0332E , 0xFFBA2B2C , 0xFFB92D2F , 0xFFBD3231 , 0xFFC33831 , 0xFFC93C31 , 0xFFCD4233 , 0xFFCF4535 , 0xFFD14835 , 0xFFD34633 , 0xFFD34633 , 0xFFD24533 , 0xFFD24533 , 0xFFD24533 , 0xFFD14533 , 0xFFD14432 , 0xFFD14432 , 0xFFD14432 , 0xFFD14332 , 0xFFD04332 , 0xFFD04332 , 0xFFD04232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFCB3D30 , 0xFFCA3D30 , 0xFFCA3D30 , 0xFFC6382E , 0xFFB8282A , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFC53830 , 0xFFC5382F , 0xFFC0322E , 0xFFBF302D , 0xFFBD302E , 0xFFB92C2D , 0xFFBA2D2D , 0xFFBB2F2D , 0xFFB12E2D , 0xFFB53330 , 0xFFB9312D , 0xFFBE3731 , 0xFFCC4032 , 0xFFD04331 , 0xFFD14332 , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCD3F30 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3D30 , 0xFFCA3D2F , 0xFFCA3D30 , 0xFFCA3C2F , 0xFFCA3C30 , 0xFFC93C2F , 0xFFC93B2F , 0xFFB92A2B , 0xFFC0322D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF872120 , 0xFF6A1518 , 0xFF6B1518 , 0xFF77181B , 0xFFBC2F2D , 0xFFD04331 , 0xFFD04332 , 0xFFCF4231 , 0xFFD04332 , 0xFFCF4231 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4031 , 0xFFCE4031 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCA3D2F , 0xFFCA3D2F , 0xFFCA3D30 , 0xFFC93C2F , 0xFFC93C30 , 0xFFC93B2F , 0xFFC93B30 , 0xFFBF302C , 0xFFBB2C2B , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF851F20 , 0xFF661417 , 0xFF641417 , 0xFF921D21 , 0xFFC73A30 , 0xFFD04332 , 0xFFD04232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCB3E31 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFCB3D30 , 0xFFCA3D30 , 0xFFCA3D30 , 0xFFCA3C30 , 0xFFC93C30 , 0xFFC93C30 , 0xFFC93B30 , 0xFFC83B30 , 0xFFC5372E , 0xFFB7292A , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF75181A , 0xFF6B1618 , 0xFF681418 , 0xFFA92528 , 0xFFCC4032 , 0xFFCF4231 , 0xFFCF4232 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFCB3D30 , 0xFFCA3D2F , 0xFFCA3D30 , 0xFFC93C2F , 0xFFC93C2F , 0xFFC93C30 , 0xFFC93B2F , 0xFFC93B30 , 0xFFC83A2F , 0xFFC83B2F , 0xFFC73A2E , 0xFFBC2C2B , 0xFFB52B2A , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF7F1C1D , 0xFF771A1B , 0xFF76171B , 0xFFB52D2C , 0xFFCD4031 , 0xFFCE4132 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCE4131 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFCB3D30 , 0xFFCA3D30 , 0xFFCA3C30 , 0xFFCA3C30 , 0xFFC93C30 , 0xFFC93B30 , 0xFFC93B30 , 0xFFC83B2F , 0xFFC83A2F , 0xFFC83A2F , 0xFFC73A2F , 0xFFC4362E , 0xFFB02629 , 0xFF912121 , 0xFFA02525 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF861F1F , 0xFF861B1E , 0xFFBA2E2B , 0xFFCD4031 , 0xFFCD4030 , 0xFFCD4030 , 0xFFCD4031 , 0xFFCD3F30 , 0xFFCD3F31 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E31 , 0xFFCB3D30 , 0xFFCA3D30 , 0xFFCB3D30 , 0xFFCA3D2F , 0xFFCA3D30 , 0xFFC93C2F , 0xFFC93C30 , 0xFFC93B2F , 0xFFC83B2F , 0xFFC83B30 , 0xFFC83A2F , 0xFFC83A2F , 0xFFC73A2E , 0xFFC73A2F , 0xFFC7392E , 0xFFC6392E , 0xFFBD2F2C , 0xFF8B1C20 , 0xFF7B191C , 0xFF8F1F21 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFF9A2624 , 0xFF8E1D20 , 0xFFBC2E2B , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD4031 , 0xFFCD3F31 , 0xFFCC3F31 , 0xFFCC3F31 , 0xFFCC3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFCB3D30 , 0xFFCA3D30 , 0xFFCA3C30 , 0xFFCA3C30 , 0xFFC93C30 , 0xFFC93C30 , 0xFFC93B30 , 0xFFC83B2F , 0xFFC83B2F , 0xFFC83A2F , 0xFFC83A2F , 0xFFC73A2F , 0xFFC7392F , 0xFFC7392F , 0xFFC6392F , 0xFFC5382E , 0xFFB5282A , 0xFF841A1E , 0xFF73161A , 0xFF801A1D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFAE2D28 , 0xFFA12425 , 0xFFB92E2E , 0xFFCA3E30 , 0xFFCD3F31 , 0xFFCC3F30 , 0xFFCC3F31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFCB3D30 , 0xFFCA3D2F , 0xFFCA3C2F , 0xFFCA3C30 , 0xFFC93C2F , 0xFFC93C30 , 0xFFC83B2F , 0xFFC93B30 , 0xFFC83B2F , 0xFFC73A2F , 0xFFC83A2F , 0xFFC7392E , 0xFFC7392F , 0xFFC6392E , 0xFFC6392F , 0xFFC6382E , 0xFFC6382F , 0xFFC5372E , 0xFFC3362E , 0xFFAF2628 , 0xFF841A1E , 0xFF76171B , 0xFF76171B , 0xFF851B1E , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFB82D2B , 0xFFB82A2C , 0xFFC53B32 , 0xFFCB3F31 , 0xFFCC3E31 , 0xFFCB3E30 , 0xFFCB3E30 , 0xFFCB3D30 , 0xFFCA3D30 , 0xFFCA3D30 , 0xFFCA3C30 , 0xFFC93C30 , 0xFFC93C30 , 0xFFC93B30 , 0xFFC83B30 , 0xFFC83B2F , 0xFFC83A2F , 0xFFC83A2F , 0xFFC73A2F , 0xFFC7392F , 0xFFC7392F , 0xFFC7392F , 0xFFC6382F , 0xFFC6382F , 0xFFC5382F , 0xFFC5382E , 0xFFC5372E , 0xFFC2342D , 0xFFB12628 , 0xFF891B20 , 0xFF79181C , 0xFF72161A , 0xFF811A1D , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFBB2E2C , 0xFFB7282B , 0xFFBE3330 , 0xFFC93D31 , 0xFFCA3D30 , 0xFFCB3D30 , 0xFFCA3D2F , 0xFFCA3D30 , 0xFFC93C2F , 0xFFC93C2F , 0xFFC93C30 , 0xFFC83B2F , 0xFFC83B30 , 0xFFC83A2F , 0xFFC83A2F , 0xFFC73A2E , 0xFFC7392E , 0xFFC7392F , 0xFFC6392E , 0xFFC6392F , 0xFFC6382E , 0xFFC6382F , 0xFFC5372E , 0xFFC5372E , 0xFFC4372E , 0xFFC4362D , 0xFFC4362E , 0xFFC2342D , 0xFFB6292A , 0xFF981E23 , 0xFF7E191D , 0xFF76171B , 0xFF7C191C , 0xFF931F21 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFBE312D , 0xFFBA2C2C , 0xFFB82A2C , 0xFFC13933 , 0xFFC93D30 , 0xFFCA3C2F , 0xFFCA3C30 , 0xFFC93C2F , 0xFFC93B2F , 0xFFC93B30 , 0xFFC83B2F , 0xFFC83B2F , 0xFFC73A2F , 0xFFC83A2F , 0xFFC7392E , 0xFFC7392E , 0xFFC7392F , 0xFFC6382E , 0xFFC6382F , 0xFFC5382E , 0xFFC5382E , 0xFFC4372E , 0xFFC5372E , 0xFFC4362D , 0xFFC4362D , 0xFFC4362E , 0xFFC3352D , 0xFFC3352D , 0xFFBD2F2C , 0xFFAD2528 , 0xFF941E22 , 0xFF7E191D , 0xFF75171B , 0xFF8B1C20 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFBF312D , 0xFFB92A2B , 0xFFB82B2D , 0xFFBF342F , 0xFFC73C32 , 0xFFC93C30 , 0xFFC93B30 , 0xFFC83B2F , 0xFFC83B2F , 0xFFC83A2F , 0xFFC83A2F , 0xFFC73A2F , 0xFFC7392F , 0xFFC7392F , 0xFFC6392F , 0xFFC6382F , 0xFFC6382F , 0xFFC5382E , 0xFFC5372E , 0xFFC5372E , 0xFFC5372E , 0xFFC4362E , 0xFFC4362E , 0xFFC4362E , 0xFFC3352E , 0xFFC3352E , 0xFFC2352E , 0xFFC1342D , 0xFFBD2E2B , 0xFFB6292A , 0xFFA72226 , 0xFF9A1F23 , 0xFF961E22 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFBF312E , 0xFFBA2B2C , 0xFFB7292C , 0xFFBA2F2F , 0xFFC1342F , 0xFFC53B31 , 0xFFC73A2E , 0xFFC73A2F , 0xFFC7392E , 0xFFC7392F , 0xFFC6382E , 0xFFC6382E , 0xFFC6382F , 0xFFC5372E , 0xFFC5372E , 0xFFC4372E , 0xFFC5372E , 0xFFC4362D , 0xFFC4362E , 0xFFC3352D , 0xFFC3352D , 0xFFC3352E , 0xFFC2352D , 0xFFC2342D , 0xFFC2342D , 0xFFC0322C , 0xFFBC2E2B , 0xFFB7282A , 0xFFAF2428 , 0xFFA12125 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFBE312D , 0xFFBC2E2C , 0xFFBA2B2B , 0xFFB82A2C , 0xFFB92C2E , 0xFFBE312E , 0xFFC13731 , 0xFFC43830 , 0xFFC5382F , 0xFFC5382F , 0xFFC5382E , 0xFFC5372E , 0xFFC5372E , 0xFFC5372E , 0xFFC4362E , 0xFFC4362E , 0xFFC4362E , 0xFFC3352E , 0xFFC2342E , 0xFFC1332E , 0xFFBE302C , 0xFFBB2C2B , 0xFFB8292A , 0xFFB7272A , 0xFFB7292A , 0xFFB42929 , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFBD2F2D , 0xFFBB2C2C , 0xFFB92B2B , 0xFFB7292C , 0xFFB8292B , 0xFFB82D2E , 0xFFB92D2D , 0xFFBA2D2D , 0xFFBB3130 , 0xFFBC2C2B , 0xFFBB2F2F , 0xFFBA2E2E , 0xFFB92B2C , 0xFFB82B2D , 0xFFB7282B , 0xFFB7282B , 0xFFB8292A , 0xFFBB2C2B , 0xFFBB2D2B , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFBD302D , 0xFFBC2E2C , 0xFFBB2E2C , 0xFFBC2E2C , 0xFFBB2D2C , 0xFFBC2D2C , 0xFFBB2D2C , 0xFFBB2D2C , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF , 0xFFFFFFFF ,
};

/* class MsgBoxHost */

class MsgBoxHost : NoCopy
 {
   Display *display = 0 ;
   int screen = 0 ;

   Atom wm_protocols = None ;
   Atom wm_delete_window = None ;
   KeyCode esc_keycode = 0 ;

   XFontStruct *font = 0 ;

   bool run_flag = true ;
   Window window = None ;
   GC gc = None ;

   StrLen text;
   bool has_focus = false ;

  private:

   Point getSize()
    {
     return {400,300};
    }

   void setTitle(StrLen str)
    {
     XTextProperty prop;

     prop.value=(unsigned char *)str.ptr;
     prop.encoding=XA_STRING;
     prop.format=8;
     prop.nitems=str.len;

     XSetWMName(display,window,&prop);
    }

   void setProtocols()
    {
     if( wm_delete_window==None ) return;

     XSetWMProtocols(display,window,&wm_delete_window,1);
    }

   void setIcon(const long *icon,ulen icon_len)
    {
     Atom net_wm_icon=XInternAtom(display,"_NET_WM_ICON",False);

     if( net_wm_icon==None ) return;

     XChangeProperty(display,window,net_wm_icon,XA_CARDINAL,32,PropModeReplace,(const unsigned char *)icon,icon_len);
    }

   void setIcon()
    {
     setIcon(MsgBoxIcon,DimOf(MsgBoxIcon));
    }

   unsigned long getColor(const char *name)
    {
     XColor ret;
     XColor exact;

     if( XAllocNamedColor(display,DefaultColormap(display,screen),name,&ret,&exact) ) return ret.pixel;

     Printf(Con,"bad color name\n");

     return 0;
    }

   bool create(StrLen title)
    {
     Point size=getSize();

     Window root=RootWindow(display,screen);

     window=XCreateSimpleWindow(display,root,0,0,size.x,size.y,0,0,0);

     if( window==None ) return false;

     XSetWindowBackground(display,window,getColor("blue"));

     XGCValues gcv{};

     gcv.foreground=getColor("yellow");
     gcv.background=getColor("black");

     gc=XCreateGC(display,window,GCForeground|GCBackground,&gcv);

     if( gc!=None && font )
       {
        XSetFont(display,gc,font->fid);
       }

     setTitle(title);

     setProtocols();

     setIcon();

     XSelectInput(display,window,ButtonPressMask|KeyPressMask|FocusChangeMask|ExposureMask);

     XMapWindow(display,window);

     return true;
    }

   void drawText(int x,int y,StrLen str)
    {
     XDrawString(display,window,gc,x,y,str.ptr,str.len);
    }

   void draw(XFontStruct *font)
    {
     int a=font->ascent;
     int d=font->descent;

     int dy=a+d;
     int x=dy;
     int y=dy+a;

     StrLen t=text;

     while( +t )
       {
        StrLen line=CutLine(t);

        drawText(x,y,line);

        y+=dy;
       }
    }

   void draw()
    {
     if( gc==None ) return;

     if( font )
       {
        draw(font);
       }
     else
       {
        if( XFontStruct *temp=XQueryFont(display,(Font)gc) )
          {
           draw(temp);

           XFreeFontInfo(0,temp,1);
          }
       }
    }

   void redraw()
    {
     XClearArea(display,window,0,0,0,0,True);
    }

   void handle(XEvent &event)
    {
     switch( event.type )
       {
        case KeyPress :
         {
          XKeyPressedEvent &data=event.xkey;

          if( data.keycode==esc_keycode )
            {
             run_flag=false;
            }
         }
        break;

        case ButtonPress :
         {
          XSetInputFocus(display,window,RevertToPointerRoot,CurrentTime);
         }
        break;

        case FocusIn :
         {
          has_focus=true;

          redraw();
         }
        break;

        case FocusOut :
         {
          has_focus=false;

          redraw();
         }
        break;

        case Expose :
         {
          XExposeEvent &data=event.xexpose;

          if( data.count==0 ) draw();
         }
        break;

        case ClientMessage :
         {
          XClientMessageEvent &data=event.xclient;

          if( wm_protocols==None || wm_delete_window==None ) break;

          if( data.message_type==wm_protocols )
            {
             if( data.format==32 && data.data.l[0]==(long)wm_delete_window )
               {
                run_flag=false;
               }
            }
         }
        break;
       }
    }

   void run()
    {
     run_flag=true;

     for(XEvent event; run_flag ;)
       {
        XNextEvent(display,&event);

        if( event.xany.window==window ) handle(event);
       }
    }

   void destroy()
    {
     if( gc!=None )
       {
        XFreeGC(display,gc);

        gc=None;
       }

     XDestroyWindow(display,window);

     window=None;
    }

  public:

   MsgBoxHost()
    : display(XOpenDisplay(0))
    {
     if( !display ) return;

     screen=DefaultScreen(display);

     esc_keycode=XKeysymToKeycode(display,XK_Escape);

     wm_protocols=XInternAtom(display,"WM_PROTOCOLS",False);
     wm_delete_window=XInternAtom(display,"WM_DELETE_WINDOW",False);

     font=XLoadQueryFont(display,"12x24");
    }

   ~MsgBoxHost()
    {
     if( display )
       {
        XFreeFont(display,font);

        XCloseDisplay(display);
       }
    }

   void show(StrLen title,StrLen text_)
    {
     if( !display ) return;

     text=text_;
     has_focus=false;

     if( create(title) )
       {
        run();

        destroy();
       }
    }
 };

/* class X11Host */

class X11Host : public WindowHost , WindowDispatcher
 {
   Display *disp;
   int screen;

   Window window = None ;
   GC gc = None ;
   bool window_ok = false ;
   bool is_main = false ;
   bool expose_flag = true ;
   bool show_flag = false ;
   bool parent_show = true ;

   MouseShape mouse_shape = Mouse_Null ;

   bool user_flag = true ;
   bool leave_flag = false ;
   bool motion_flag = true ;

   bool stack_changed = true ;

   Point origin;
   Point size;

   WindowBuf buf;
   bool buf_dirty = true ;

   Pane restore;
   bool max_flag = false ;

   struct HoverDetector : NoCopy
    {
      MSec timeout = Null ;
      bool enable = false ;

      bool flag = false ;
      Point point;
      MouseKey mkey = MouseKey_Null ;
      MSecTimer timer;

     public:

      HoverDetector() {}

      void reset()
       {
        flag=false;
        enable=false;
       }

      void track(MSec timeout_)
       {
        timeout=timeout_;
        enable=true;
       }

      void untrack()
       {
        enable=false;
       }

      void start(Point point_,MouseKey mkey_)
       {
        if( enable )
          {
           if( flag )
             {
              if( Change(point,point_) ) timer.reset();

              mkey=mkey_;
             }
           else
             {
              flag=true;
              point=point_;
              mkey=mkey_;
              timer.reset();
             }
          }
       }

      void stop()
       {
        flag=false;
       }

      void test(FrameWindow *frame)
       {
        if( flag )
          {
           if( timer.exceed(+timeout) )
             {
              flag=false;

              frame->put_Hover(point,mkey);
             }
          }
       }
    };

   HoverDetector hover;

   MSec dclick_timeout = 500_msec ;

   struct DClickDetector : NoCopy
    {
      bool flag = false ;
      Point point;
      MSecTimer timer;

     public:

      DClickDetector() {}

      void reset()
       {
        flag=false;
       }

      bool detect(Point point_,MSec timeout)
       {
        if( flag )
          {
           if( Change(point,point_) )
             {
              timer.reset();
             }
           else
             {
              if( timer.less(+timeout)  )
                {
                 flag=false;

                 return true;
                }
              else
                {
                 timer.reset();
                }
             }
          }
        else
          {
           flag=true;

           point=point_;

           timer.reset();
          }

        return false;
       }

      void ping(MSec timeout)
       {
        if( flag )
          {
           if( timer.exceed(+timeout) ) flag=false;
          }
       }

      void stop()
       {
        flag=false;
       }
    };

   DClickDetector left_dclick;
   DClickDetector right_dclick;

   DLink<X11Host> dlink;

   using DAlgo = DLink<X11Host>::LinearAlgo<&X11Host::dlink> ;

   X11Host *dparent = 0 ;
   DAlgo::Top dlist;

   DynArray<char> clipboard;

  private:

   // reset()

   void reset()
    {
     expose_flag=true;
     show_flag=false;
     parent_show=true;
     mouse_shape=Mouse_Null;
     user_flag=true;
     leave_flag=false;
     motion_flag=true;
     stack_changed=true;
     origin=Null;
     size=Null;
     buf_dirty=true;
     max_flag=false;
     hover.reset();
     left_dclick.reset();
     right_dclick.reset();

     clipboard.erase();
    }

   // utils

   void guardAlive(const char *format)
    {
     if( window==None )
       {
        Printf(Exception,format,"window is dead");
       }
    }

   void guardDead(const char *format)
    {
     if( window!=None )
       {
        Printf(Exception,format,"window is alive");
       }
    }

   static void GuardMaxSize(const char *format,Point max_size)
    {
     if( max_size<=Null )
       {
        Printf(Exception,format,"bad max_size");
       }
    }

   static void GuardPane(const char *format,Pane pane,Point max_size)
    {
     if( !(pane.getSize()<=max_size) )
       {
        Printf(Exception,format,"bad pane size");
       }
    }

   void guardCreate(const char *format,Point max_size)
    {
     guardDead(format);

     GuardMaxSize(format,max_size);
    }

   void guardCreate(const char *format,Pane pane,Point max_size)
    {
     guardDead(format);

     GuardMaxSize(format,max_size);

     GuardPane(format,pane,max_size);
    }

   static PlatformRandom Random;

   static Coord RandomLen(Coord len)
    {
     int percent=Random.select(128);

     return Coord( (len/2)+((len/4)*percent)/128 );
    }

   static Coord RandomPos(Coord len)
    {
     int percent=Random.select(128);

     return Coord( (len*percent)/128 );
    }

   static Bool MatchSelection(Display *,XEvent *event,XPointer)
    {
     return event->type==SelectionNotify || event->type==SelectionRequest ;
    }

   // cursor

   static Cursor CursorTable[];

   static Cursor GetCursor(Display *display,MouseShape mshape);

   // event mask

   static unsigned EventMask(bool user_flag,bool leave_flag)
    {
     unsigned ret=ExposureMask|FocusChangeMask|StructureNotifyMask;

     if( user_flag )
       {
        ret|=KeyPressMask|KeyReleaseMask|ButtonPressMask|ButtonReleaseMask|PointerMotionMask;

        if( leave_flag ) ret|=LeaveWindowMask;
       }

     return ret;
    }

   void setEventMask()
    {
     if( window_ok )
       {
        DesktopObject.setFuncName("XSelectInput");

        XSelectInput(disp,window,EventMask(user_flag,leave_flag));
       }
    }

   void disableMotionNotify()
    {
     motion_flag=false;
    }

   void enableMotionNotify()
    {
     motion_flag=true;
    }

   // MainWindow

   static X11Host *MainWindow;

   // descendants

   void addDescendant(X11Host *host)
    {
     if( host->dparent==0 )
       {
        dlist.ins(host);

        host->dparent=this;

        host->parent_show = parent_show && show_flag ;
       }
    }

   void delAsDescendant()
    {
     if( dparent )
       {
        dparent->dlist.del(this);

        dparent=0;

        parent_show=true;
       }
    }

   // postDestroy()

   void postDestroy()
    {
     DelFromMap(this);
     delAsDescendant();

     clipboard.erase();
    }

   // message handle

   static MouseKey GetMKey(unsigned state)
    {
     return DesktopObject.getMKey(state);
    }

   static KeyMod GetKMod(unsigned state)
    {
     return DesktopObject.getKMod(state);
    }

   static auto MapToVKey(unsigned state,unsigned keycode)
    {
     return DesktopObject.mapToVKey(state,keycode);
    }

   static auto MapToChar(unsigned state,unsigned keycode)
    {
     return DesktopObject.mapToChar(state,keycode);
    }

   void mouseShape(VKey vkey,KeyMod kmod)
    {
     if( vkey==VKey_Shift || vkey==VKey_Ctrl || vkey==VKey_Alt )
       {
        frame->setMouseShape(getMousePos(),kmod);
       }
    }

   virtual void handle(XEvent &event)
    {
     if( !is_alive )
       {
        is_alive=true;

        try { frame->alive(); } catch(...) {}

        XWindowAttributes attr{};

        if( window_ok )
          {
           DesktopObject.setFuncName("XGetWindowAttributes");

           XGetWindowAttributes(disp,window,&attr);
          }

        origin=Point_cast(attr.x,attr.y);
        size=Point_cast(attr.width,attr.height);

        frame->setSize(size,buf_dirty);
       }

     switch( event.type )
       {
        // user input

        case KeyPress :
         {
          XKeyPressedEvent &data=event.xkey;

          auto result=MapToChar(data.state,data.keycode);
          KeyMod kmod=GetKMod(data.state);

          if( result.ext ) kmod|=KeyMod_Ext;

          mouseShape(result.vkey,kmod);

          frame->put_Key(result.vkey,kmod);

          if( result.vkey==VKey_F12 ) DesktopObject.updateMap();

          if( char ch=result.ch )
            {
             if( kmod&KeyMod_Alt )
               frame->put_AltChar(ch);
             else
               frame->put_Char(ch);
            }
         }
        break;

        case KeyRelease :
         {
          XKeyReleasedEvent &data=event.xkey;

          auto result=MapToVKey(data.state,data.keycode);
          KeyMod kmod=GetKMod(data.state);

          if( result.ext ) kmod|=KeyMod_Ext;

          mouseShape(result.vkey,kmod);

          frame->put_KeyUp(result.vkey,kmod);
         }
        break;

        case ButtonPress :
         {
          if( window_ok )
            {
             DesktopObject.setFuncName("XSetInputFocus");

             XSetInputFocus(disp,window,RevertToPointerRoot,CurrentTime);
            }

          raiseAll();

          XButtonEvent &data=event.xbutton;

          Point point=Point_cast(data.x_root,data.y_root)-origin;
          MouseKey mkey=GetMKey(data.state);

          hover.stop();

          switch( data.button )
            {
             case Button1 :
              {
               bool dclick=left_dclick.detect(point,dclick_timeout);

               frame->put_LeftClick(point,mkey|MouseKey_Left);

               if( dclick ) frame->put_LeftDClick(point,mkey|MouseKey_Left);
              }
             break;

             case Button3 :
              {
               bool dclick=right_dclick.detect(point,dclick_timeout);

               frame->put_RightClick(point,mkey|MouseKey_Right);

               if( dclick ) frame->put_RightDClick(point,mkey|MouseKey_Right);
              }
             break;

             case Button4 : frame->put_Wheel(point,mkey,1); break;

             case Button5 : frame->put_Wheel(point,mkey,-1); break;
            }
         }
        break;

        case ButtonRelease :
         {
          XButtonEvent &data=event.xbutton;

          Point point=Point_cast(data.x_root,data.y_root)-origin;
          MouseKey mkey=GetMKey(data.state);

          switch( data.button )
            {
             case Button1 : frame->put_LeftUp(point,mkey); break;

             case Button3 : frame->put_RightUp(point,mkey); break;
            }
         }
        break;

        case MotionNotify :
         {
          XMotionEvent &data=event.xmotion;

          Point point=Point_cast(data.x_root,data.y_root)-origin;
          MouseKey mkey=GetMKey(data.state);

          if( (mkey&(MouseKey_Left|MouseKey_Right))==0 ) hover.start(point,mkey);

          frame->setMouseShape(point,GetKMod(data.state));

          if( motion_flag ) frame->put_Move(point,mkey);
         }
        break;

        case LeaveNotify :
         {
          XLeaveWindowEvent &data=event.xcrossing;

          if( data.mode==NotifyUngrab )
            {
             frame->looseCapture();
            }
          else
            {
             hover.stop();

             frame->put_Leave();
            }
         }
        break;

        case FocusIn :
         {
          frame->gainFocus();
         }
        break;

        case FocusOut :
         {
          frame->looseFocus();
         }
        break;

        // draw

        case Expose :
         {
          bool flag=Replace(expose_flag,false);

          XExposeEvent &data=event.xexpose;

          Pane pane=Pane_cast(data.x,data.y,data.width,data.height);

          if( !buf_dirty && window_ok ) buf.draw(disp,window,gc,pane);

          DesktopObject.setFuncName("XSync");

          XSync(disp,False);

          frame->paintDone(Replace_null(token));

          if( flag )
            {
             if( window_ok )
               {
                DesktopObject.setFuncName("XSetInputFocus");

                XSetInputFocus(disp,window,RevertToPointerRoot,CurrentTime);
               }
            }
         }
        break;

        // state

        case DestroyNotify :
         {
          try { frame->dead(); } catch(...) {}

          window=None;
          is_alive=false;

          postDestroy();

          if( is_main )
            {
             MainWindow=0;

             HiddenWindow.destroy();

             Stop();
            }
         }
        break;

        case ConfigureNotify :
         {
          stack_changed=true;
         }
        break;

        case ClientMessage :
         {
          clearStackChanged();
         }
        break;

        case SelectionRequest :
         {
          XSelectionRequestEvent &data=event.xselectionrequest;

          Atom notify_atom;

          if( data.selection==XA_PRIMARY && data.target==XA_STRING )
            {
             DesktopObject.setFuncName("XChangeProperty");

             unsigned char *ptr=(unsigned char *)clipboard.getPtr();
             int len=(int)Min<ulen>(clipboard.getLen(),SIntFunc<int>::MaxPositive);

             XChangeProperty(disp,data.requestor,data.property,data.target,8,PropModeReplace,ptr,len);

             notify_atom=data.property;
            }
          else
            {
             notify_atom=None;
            }

          DesktopObject.setFuncName("XSendEvent");

          XEvent notify{};

          XSelectionEvent &out=notify.xselection;

          out.type=SelectionNotify;
          out.requestor=data.requestor;
          out.selection=data.selection;
          out.target=data.target;
          out.property=notify_atom;
          out.time=data.time;

          XSendEvent(disp,data.requestor,False,0,&notify);
         }
        break;

        case SelectionClear :
         {
          clipboard.erase();
         }
        break;
       }
    }

   virtual void ping()
    {
     enableMotionNotify();

     hover.test(frame);

     left_dclick.ping(dclick_timeout);

     right_dclick.ping(dclick_timeout);
    }

   // group actions

   void destroyAll()
    {
     for(auto cur=dlist.start(); +cur ;++cur)
       {
        cur->destroyAll();
       }

     if( window_ok )
       {
        DesktopObject.setFuncName("XFreeGC");

        XFreeGC(disp,gc);

        DesktopObject.setFuncName("XDestroyWindow");

        XDestroyWindow(disp,window);

        window_ok=false;
       }
    }

   void clearStackChanged()
    {
     stack_changed=false;

     for(auto cur=dlist.start(); +cur ;++cur) cur->clearStackChanged();
    }

   void raiseAll(bool force=false)
    {
     if( window_ok && ( stack_changed || force ) )
       {
        DesktopObject.setFuncName("XRaiseWindow");

        XRaiseWindow(disp,window);
       }

     if( stack_changed || force )
       for(auto cur=dlist.start(); +cur ;++cur) cur->raiseAll(true);

     if( window_ok && !force )
       {
        DesktopObject.setFuncName("XSendEvent");

        XEvent event{};

        event.xclient.type=ClientMessage;
        event.xclient.window=window;
        event.xclient.message_type=0;
        event.xclient.format=8;

        XSendEvent(disp,window,False,0,&event);
       }
    }

   void parentShowOn()
    {
     parent_show=true;

     if( window_ok && show_flag )
       {
        DesktopObject.setFuncName("XMapWindow");

        XMapWindow(disp,window);
       }

     if( show_flag )
       for(auto cur=dlist.start(); +cur ;++cur) cur->parentShowOn();
    }

   void parentShowOff()
    {
     parent_show=false;

     if( window_ok && show_flag )
       {
        DesktopObject.setFuncName("XUnmapWindow");

        XUnmapWindow(disp,window);
       }

     if( show_flag )
       for(auto cur=dlist.start(); +cur ;++cur) cur->parentShowOff();
    }

   void showAll()
    {
     if( window_ok && parent_show )
       {
        DesktopObject.setFuncName("XMapWindow");

        XMapWindow(disp,window);
       }

     if( parent_show )
       for(auto cur=dlist.start(); +cur ;++cur) cur->parentShowOn();
    }

   void hideAll()
    {
     if( window_ok && parent_show )
       {
        DesktopObject.setFuncName("XUnmapWindow");

        XUnmapWindow(disp,window);
       }

     if( parent_show )
       for(auto cur=dlist.start(); +cur ;++cur) cur->parentShowOff();
    }

  public:

   X11Host(Display *display_,int screen_)
    : disp(display_),
      screen(screen_)
    {
    }

   virtual ~X11Host()
    {
     postDestroy();
    }

   // msg boxes

   static void CloseApp()
    {
     if( MainWindow ) MainWindow->frame->askClose();
    }

   static void RestoreApp()
    {
     if( MainWindow ) MainWindow->show();
    }

   static void AbortMsgBox(StrLen text)
    {
     MsgBoxHost host;

     host.show("Abort",text);
    }

   static void ErrorMsgBox(StrLen text,StrLen title)
    {
     MsgBoxHost host;

     host.show(title,text);
    }

   // WinControl
   // create/destroy

   virtual void createMain(Point max_size)
    {
     Pane work=DesktopObject.getMaxPane();

     Point size;

     size.x=RandomLen(work.dx);
     size.y=RandomLen(work.dy);

     size=Inf(size,max_size);

     Point base;

     base.x=RandomPos(work.dx-size.x);
     base.y=RandomPos(work.dy-size.y);

     Pane pane=Pane(work.getBase()+base,size);

     createMain(pane,max_size);
    }

   virtual void createMain(Pane pane,Point max_size_)
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::createMain(...) : #;";

     guardCreate(format,pane,max_size_);

     if( MainWindow!=0 )
       {
        Printf(Exception,format,"main window is already created");
       }

     HiddenWindow.create();

     is_main=true;
     max_size=max_size_;

     reset();

     buf.setSize(max_size_);

     // create

     Window root=RootWindow(disp,screen);

     XSetWindowAttributes attr{};

     attr.event_mask=EventMask(user_flag,leave_flag);

     attr.override_redirect=True;

     DesktopObject.setFuncName("XCreateWindow");

     window=XCreateWindow(disp,root,pane.x,pane.y,pane.dx,pane.dy,0,CopyFromParent,InputOutput,CopyFromParent,CWEventMask|CWOverrideRedirect,&attr);

     if( window==None )
       {
        Printf(Exception,format,"cannot create window");
       }

     window_ok=true;

     // create gc

     XGCValues gcv{};

     DesktopObject.setFuncName("XCreateGC");

     gc=XCreateGC(disp,window,0,&gcv);

     if( gc==None )
       {
        DesktopObject.setFuncName("XDestroyWindow");

        XDestroyWindow(disp,window);

        window_ok=false;

        Printf(Exception,format,"cannot create GC");
       }

     // finish

     MainWindow=this;

     AddToMap(window,this);
    }

   virtual void create(Pane pane,Point max_size_)
    {
     create(0,pane,max_size_);
    }

   virtual void create(WindowHost *parent_,Pane pane,Point max_size_)
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::create(...) : #;";

     guardCreate(format,pane,max_size_);

     X11Host *parent;

     if( parent_ )
       {
        parent=dynamic_cast<X11Host *>(parent_);

        if( !parent )
          {
           Printf(Exception,format,"bad parent");
          }

        if( !parent->window_ok )
          {
           Printf(Exception,format,"dead parent");
          }
       }
     else
       {
        parent=MainWindow;
       }

     is_main=false;
     max_size=max_size_;

     reset();

     buf.setSize(max_size_);

     // create

     Window root=RootWindow(disp,screen);

     XSetWindowAttributes attr{};

     attr.event_mask=EventMask(user_flag,leave_flag);

     attr.override_redirect=True;

     DesktopObject.setFuncName("XCreateWindow");

     window=XCreateWindow(disp,root,pane.x,pane.y,pane.dx,pane.dy,0,CopyFromParent,InputOutput,CopyFromParent,CWEventMask|CWOverrideRedirect,&attr);

     if( window==None )
       {
        Printf(Exception,format,"cannot create window");
       }

     window_ok=true;

     // create gc

     XGCValues gcv{};

     DesktopObject.setFuncName("XCreateGC");

     gc=XCreateGC(disp,window,0,&gcv);

     if( gc==None )
       {
        DesktopObject.setFuncName("XDestroyWindow");

        XDestroyWindow(disp,window);

        window_ok=false;

        Printf(Exception,format,"cannot create GC");
       }

     // finish

     AddToMap(window,this);

     if( parent ) parent->addDescendant(this);
    }

   virtual void destroy()
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::destroy() : #;";

     guardAlive(format);

     destroyAll();

     while( is_alive && !is_main )
       {
        if( !frame->desktop->pump() ) break;
       }
    }

   // operations

   virtual void setTitle(StrLen title)
    {
     CapString<> cap(title);

     const char *format="CCore::Video::Private_Desktop::X11Host::setTitle(...) : #;";

     guardAlive(format);

     if( is_main ) HiddenWindow.setTitle(StrLen(cap));
    }

   virtual void setMaxSize(Point max_size_)
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::setMaxSize(...) : #;";

     GuardMaxSize(format,max_size_);

     buf.setSize(max_size_);

     max_size=max_size_;

     buf_dirty=true;
    }

   virtual bool enableUserInput(bool en)
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::enableUserInput(...) : #;";

     guardAlive(format);

     bool ret=user_flag;

     if( Change(user_flag,en) ) setEventMask();

     return ret;
    }

   virtual void display(CmdDisplay cmd_display)
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::display(...) : #;";

     guardAlive(format);

     switch( cmd_display )
       {
        default:
        case CmdDisplay_Normal :
         {
          show();
         }
        break;

        case CmdDisplay_Minimized :
         {
          if( is_main )
            {
             hide();

             HiddenWindow.iconify();
            }
         }
        break;

        case CmdDisplay_Maximized :
         {
          if( !max_flag )
            {
             max_flag=true;

             restore=getPlace();

             Pane pane=DesktopObject.getMaxPane();

             Replace_min(pane.dx,max_size.x);
             Replace_min(pane.dy,max_size.y);

             do_move(pane);

             if( window_ok )
               {
                DesktopObject.setFuncName("XClearArea");

                XClearArea(disp,window,0,0,0,0,True);
               }
            }

          show();
         }
        break;

        case CmdDisplay_Restore :
         {
          if( max_flag )
            {
             max_flag=false;

             do_move(restore);

             if( window_ok )
               {
                DesktopObject.setFuncName("XClearArea");

                XClearArea(disp,window,0,0,0,0,True);
               }
            }

          show();
         }
        break;
       }
    }

   virtual void show()
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::show() : #;";

     guardAlive(format);

     if( Change(show_flag,true) ) showAll();
    }

   virtual void hide()
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::hide() : #;";

     guardAlive(format);

     if( Change(show_flag,false) ) hideAll();
    }

   // drawing

   virtual void update()
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::update() : #;";

     guardAlive(format);

     Pane pane(Null,size);

     if( window_ok ) buf.draw(disp,window,gc,pane);

     buf_dirty=false;
    }

   virtual void invalidate(Pane pane,unsigned token_)
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::invalidate(...) : #;";

     guardAlive(format);

     if( !pane ) return;

     token|=token_;

     if( window_ok )
       {
        DesktopObject.setFuncName("XClearArea");

        XClearArea(disp,window,pane.x,pane.y,pane.dx,pane.dy,True);
       }

     buf_dirty=false;
    }

   virtual void invalidate(unsigned token_)
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::invalidate(...) : #;";

     guardAlive(format);

     token|=token_;

     if( window_ok )
       {
        DesktopObject.setFuncName("XClearArea");

        XClearArea(disp,window,0,0,0,0,True);
       }

     buf_dirty=false;
    }

   virtual ColorPlane getDrawPlane()
    {
     return buf.getPlane();
    }

   // keyboard

   virtual void setFocus()
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::setFocus() : #;";

     guardAlive(format);

     if( window_ok )
       {
        DesktopObject.setFuncName("XSetInputFocus");

        XSetInputFocus(disp,window,RevertToPointerRoot,CurrentTime);
       }
    }

   // mouse

   virtual Point getMousePos()
    {
     Window root;
     Window child;
     int root_x;
     int root_y;
     int win_x;
     int win_y;
     unsigned state;

     if( window_ok )
       {
        DesktopObject.setFuncName("XQueryPointer");

        if( XQueryPointer(disp,window,&root,&child,&root_x,&root_y,&win_x,&win_y,&state) )
          {
           Point point=Point_cast(root_x,root_y);

           return point-origin;
          }
       }

     return Null;
    }

   virtual void captureMouse()
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::captureMouse() : #;";

     guardAlive(format);

     if( window_ok )
       {
        DesktopObject.setFuncName("XGrabPointer");

        static const unsigned AllEventMask=ButtonPressMask|ButtonReleaseMask|PointerMotionMask|LeaveWindowMask;

        XGrabPointer(disp,window,False,AllEventMask,GrabModeAsync,GrabModeAsync,None,GetCursor(disp,mouse_shape),CurrentTime);
       }
    }

   virtual void releaseMouse()
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::releaseMouse() : #;";

     guardAlive(format);

     DesktopObject.setFuncName("XUngrabPointer");

     XUngrabPointer(disp,CurrentTime);
    }

   virtual void trackMouseHover()
    {
     trackMouseHover(400_msec);
    }

   virtual void trackMouseHover(MSec time)
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::trackMouseHover(...) : #;";

     guardAlive(format);

     hover.track(time);
    }

   virtual void untrackMouseHover()
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::untrackMouseHover() : #;";

     guardAlive(format);

     hover.untrack();
    }

   virtual void trackMouseLeave()
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::trackMouseLeave() : #;";

     guardAlive(format);

     if( Change(leave_flag,true) ) setEventMask();
    }

   virtual void untrackMouseLeave()
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::untrackMouseLeave() : #;";

     guardAlive(format);

     if( Change(leave_flag,false) ) setEventMask();
    }

   virtual void setMouseShape(MouseShape mshape)
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::setMouseShape(...) : #;";

     guardAlive(format);

     if( Change(mouse_shape,mshape) )
       {
        if( window_ok )
          {
           DesktopObject.setFuncName("XDefineCursor");

           XDefineCursor(disp,window,GetCursor(disp,mshape));
          }
       }
    }

   // place

   virtual Pane getPlace()
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::getPlace() : #;";

     guardAlive(format);

     return Pane(origin,size);
    }

   void do_move(Pane pane)
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::do_move(...) : #;";

     guardAlive(format);

     GuardPane(format,pane,max_size);

     if( window_ok )
       {
        DesktopObject.setFuncName("XMoveResizeWindow");

        XMoveResizeWindow(disp,window,pane.x,pane.y,pane.dx,pane.dy);
       }

     disableMotionNotify();
     left_dclick.stop();
     right_dclick.stop();

     hover.stop();

     DesktopObject.setFuncName("XSync");

     XSync(disp,False);

     origin=pane.getBase();

     if( Change(size,pane.getSize()) )
       {
        frame->setSize(size,buf_dirty);
       }
    }

   virtual void setPlace(Pane pane)
    {
     max_flag=false;

     do_move(pane);
    }

   // clipboard

   virtual void textToClipboard(StrLen text)
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::textToClipboard(...) : #;";

     guardAlive(format);

     if( window_ok )
       {
        DesktopObject.setFuncName("XSetSelectionOwner");

        XSetSelectionOwner(disp,XA_PRIMARY,window,CurrentTime);

        clipboard.erase();

        clipboard.extend_copy(text);
       }
    }

   virtual void textFromClipboard(Function<void (StrLen)> func)
    {
     const char *format="CCore::Video::Private_Desktop::X11Host::textFromClipboard(...) : #;";

     guardAlive(format);

     if( window_ok )
       {
        DesktopObject.setFuncName("XInternAtom");

        Atom prop=XInternAtom(disp,"STRING_FROM_CLIPBOARD",False);

        if( prop==Null )
          {
           func(Empty);

           return;
          }

        DesktopObject.setFuncName("XConvertSelection");

        XConvertSelection(disp,XA_PRIMARY,XA_STRING,prop,window,CurrentTime);

        for(MSecTimer timer; timer.less(1000) ;)
          {
           XEvent event;

           if( XCheckIfEvent(disp,&event,MatchSelection,0) )
             {
              if( event.type==SelectionNotify )
                {
                 XSelectionEvent &data=event.xselection;

                 if( data.property==prop )
                   {
                    DesktopObject.setFuncName("XGetWindowProperty");

                    Atom type=None;
                    int format=0;
                    unsigned long ret_len=0;
                    unsigned long rest_len=0;
                    unsigned char *str=0;

                    XGetWindowProperty(disp,window,prop,0,SIntFunc<long>::MaxPositive/4,True,XA_STRING,&type,&format,&ret_len,&rest_len,&str);

                    if( format )
                      {
                       if( format==8 )
                         {
                          func(Range((char *)str,(ulen)ret_len));

                          XFree(str);

                          return;
                         }

                       XFree(str);
                      }
                   }

                 func(Empty);

                 return;
                }
              else
                {
                 DispatchEvent(event);
                }
             }
          }
       }

     func(Empty);
    }
 };

PlatformRandom X11Host::Random CCORE_INITPRI_3 ;

Cursor X11Host::CursorTable[15]={};

Cursor X11Host::GetCursor(Display *display,MouseShape mshape)
 {
  if( !mshape ) return None;

  Cursor ret=CursorTable[mshape];

  if( ret==None )
    {
     static const unsigned Table[]=
      {
       0, // Mouse_Null

       XC_left_ptr,            // Mouse_Arrow
       XC_xterm,               // Mouse_IBeem
       XC_watch,               // Mouse_Wait
       XC_crosshair,           // Mouse_Cross
       XC_hand2,               // Mouse_Hand
       XC_pirate,              // Mouse_Stop
       XC_question_arrow,      // Mouse_Help
       XC_sb_h_double_arrow,   // Mouse_SizeLeftRight
       XC_sb_v_double_arrow,   // Mouse_SizeUpDown
       XC_bottom_right_corner, // Mouse_SizeUpLeft  // to DownRight
       XC_bottom_left_corner,  // Mouse_SizeUpRight // to DownLeft
       XC_fleur,               // Mouse_SizeAll
       XC_center_ptr,          // Mouse_UpArrow
       XC_boat                 // Mouse_Progress
      };

     DesktopObject.setFuncName("XcursorShapeLoadCursor");

     ret=XcursorShapeLoadCursor(display,Table[mshape]);

     CursorTable[mshape]=ret;
    }

  return ret;
 }

X11Host * X11Host::MainWindow = 0 ;

/* class X11KeyMap */

X11KeyMap::X11KeyMap(Display *display)
 {
  if( !display ) return;

  DesktopObject.setFuncName("XDisplayKeycodes");

  if( !XDisplayKeycodes(display,&keycode_min,&keycode_max) ) return;

  DesktopObject.setFuncName("XGetKeyboardMapping");

  table=XGetKeyboardMapping(display,keycode_min,keycode_max-keycode_min+1,&page_count);

  if( !table || page_count<4 ) return;

  ok=true;
 }

X11KeyMap::~X11KeyMap()
 {
  if( table ) XFree(table);
 }

void X11KeyMap::updateMap(Display *display)
 {
  if( !display )
    {
     Printf(Exception,"CCore::Video::Private_Desktop::X11KeyMap::updateMap(...) : no display");
    }

  int new_page_count;

  DesktopObject.setFuncName("XGetKeyboardMapping");

  KeySym *new_table=XGetKeyboardMapping(display,keycode_min,keycode_max-keycode_min+1,&new_page_count);

  if( !new_table )
    {
     Printf(Exception,"CCore::Video::Private_Desktop::X11KeyMap::updateMap(...) : failed to get mapping");
    }

  if( new_page_count<4 )
    {
     XFree(new_table);

     Printf(Exception,"CCore::Video::Private_Desktop::X11KeyMap::updateMap(...) : failed");
    }

  if( table ) XFree(table);

  table=new_table;
  page_count=new_page_count;
 }

 // get

MouseKey X11KeyMap::getMKey(unsigned state) const
 {
  MouseKey ret=MouseKey_Null;

  if( state&ShiftMask ) ret|=MouseKey_Shift;

  if( state&ControlMask ) ret|=MouseKey_Ctrl;

  if( state&Mod1Mask ) ret|=MouseKey_Alt;

  if( state&Button1Mask ) ret|=MouseKey_Left;

  if( state&Button3Mask ) ret|=MouseKey_Right;

  return ret;
 }

KeyMod X11KeyMap::getKMod(unsigned state) const
 {
  KeyMod ret=KeyMod_Null;

  if( state&ShiftMask ) ret|=KeyMod_Shift;

  if( state&ControlMask ) ret|=KeyMod_Ctrl;

  if( state&Mod1Mask ) ret|=KeyMod_Alt;

  if( state&LockMask ) ret|=KeyMod_CapsLock;

  if( state&Mod2Mask ) ret|=KeyMod_NumLock;

  return ret;
 }

 // mapToVKey

bool X11KeyMap::IsKP(KeySym ksym)
 {
  return ksym>=XK_KP_Space && ksym<=XK_KP_9 ;
 }

KeySym X11KeyMap::map(unsigned state,unsigned keycode) const
 {
  if( keycode<(unsigned)keycode_min || keycode>(unsigned)keycode_max ) return NoSymbol;

  KeySym *line=table+(keycode-(unsigned)keycode_min)*(unsigned)page_count;

  KeySym ret=line[2];

  if( (state&Mod2Mask) && IsKP(ret) ) return line[3];

  return ret;
 }

auto X11KeyMap::MapToVKey(KeySym ksym) -> VKeyExt
 {
  switch( ksym )
    {
     case XK_Escape : return VKey_Esc;

     case XK_F1 : return VKey_F1;
     case XK_F2 : return VKey_F2;
     case XK_F3 : return VKey_F3;
     case XK_F4 : return VKey_F4;
     case XK_F5 : return VKey_F5;
     case XK_F6 : return VKey_F6;
     case XK_F7 : return VKey_F7;
     case XK_F8 : return VKey_F8;
     case XK_F9 : return VKey_F9;
     case XK_F10 : return VKey_F10;
     case XK_F11 : return VKey_F11;
     case XK_F12 : return VKey_F12;

     case XK_grave : return VKey_Tilda;
     case XK_1 : return VKey_1;
     case XK_2 : return VKey_2;
     case XK_3 : return VKey_3;
     case XK_4 : return VKey_4;
     case XK_5 : return VKey_5;
     case XK_6 : return VKey_6;
     case XK_7 : return VKey_7;
     case XK_8 : return VKey_8;
     case XK_9 : return VKey_9;
     case XK_0 : return VKey_0;
     case XK_minus : return VKey_Minus;
     case XK_equal : return VKey_Equal;
     case XK_backslash : return VKey_BackSlash;
     case XK_BackSpace : return VKey_BackSpace;

     case XK_Tab : return VKey_Tab;
     case XK_q : return VKey_q;
     case XK_w : return VKey_w;
     case XK_e : return VKey_e;
     case XK_r : return VKey_r;
     case XK_t : return VKey_t;
     case XK_y : return VKey_y;
     case XK_u : return VKey_u;
     case XK_i : return VKey_i;
     case XK_o : return VKey_o;
     case XK_p : return VKey_p;
     case XK_bracketleft : return VKey_OpenBracket;
     case XK_bracketright : return VKey_CloseBracket;
     case XK_Return : return VKey_Enter;

     case XK_Caps_Lock : return VKey_CapsLock;
     case XK_a : return VKey_a;
     case XK_s : return VKey_s;
     case XK_d : return VKey_d;
     case XK_f : return VKey_f;
     case XK_g : return VKey_g;
     case XK_h : return VKey_h;
     case XK_j : return VKey_j;
     case XK_k : return VKey_k;
     case XK_l : return VKey_l;
     case XK_semicolon : return VKey_Semicolon;
     case XK_quoteright : return VKey_Quote;

     case XK_Shift_L : return VKey_Shift;
     case XK_z : return VKey_z;
     case XK_x : return VKey_x;
     case XK_c : return VKey_c;
     case XK_v : return VKey_v;
     case XK_b : return VKey_b;
     case XK_n : return VKey_n;
     case XK_m : return VKey_m;
     case XK_comma : return VKey_Comma;
     case XK_period : return VKey_Period;
     case XK_slash : return VKey_Slash;
     case XK_Shift_R : return VKey_Shift;

     case XK_Control_L : return VKey_Ctrl;
     case XK_Alt_L : return VKey_Alt;
     case XK_space : return VKey_Space;
     case XK_Alt_R : return Ext(VKey_Alt);
     case XK_Control_R : return Ext(VKey_Ctrl);

     case XK_Scroll_Lock : return VKey_ScrollLock;
     case XK_Pause : return VKey_Pause;

     case XK_Insert : return Ext(VKey_Insert);
     case XK_Home : return Ext(VKey_Home);
     case XK_Page_Up : return Ext(VKey_PageUp);
     case XK_Delete : return Ext(VKey_Delete);
     case XK_End : return Ext(VKey_End);
     case XK_Page_Down : return Ext(VKey_PageDown);

     case XK_Left : return Ext(VKey_Left);
     case XK_Right : return Ext(VKey_Right);
     case XK_Up : return Ext(VKey_Up);
     case XK_Down : return Ext(VKey_Down);

     case XK_Num_Lock : return Ext(VKey_NumLock);

     case XK_KP_Divide : return Ext(VKey_NumSlash);
     case XK_KP_Multiply : return VKey_NumAsterisk;
     case XK_KP_Subtract : return VKey_NumMinus;
     case XK_KP_Add : return VKey_NumPlus;
     case XK_KP_Enter : return Ext(VKey_Enter);

     case XK_KP_Home : return VKey_Home;
     case XK_KP_Up : return VKey_Up;
     case XK_KP_Page_Up : return VKey_PageUp;

     case XK_KP_Left : return VKey_Left;
     case XK_KP_Begin : return VKey_Null;
     case XK_KP_Right : return VKey_Right;

     case XK_KP_End : return VKey_End;
     case XK_KP_Down : return VKey_Down;
     case XK_KP_Page_Down : return VKey_PageDown;

     case XK_KP_Insert : return VKey_Insert;
     case XK_KP_Delete : return VKey_Delete;

     case XK_KP_7 : return VKey_Num7;
     case XK_KP_8 : return VKey_Num8;
     case XK_KP_9 : return VKey_Num9;

     case XK_KP_4 : return VKey_Num4;
     case XK_KP_5 : return VKey_Num5;
     case XK_KP_6 : return VKey_Num6;

     case XK_KP_1 : return VKey_Num1;
     case XK_KP_2 : return VKey_Num2;
     case XK_KP_3 : return VKey_Num3;

     case XK_KP_0 : return VKey_NumIns;
     case XK_KP_Decimal : return VKey_NumDel;

     default: return VKey_Null;
    }
 }

auto X11KeyMap::mapToVKey(unsigned state,unsigned keycode) const -> VKeyExt
 {
  return MapToVKey(map(state,keycode));
 }

 // mapToChar

uint32 X11KeyMap::MapToUnicode(KeySym ksym)
 {
  switch( ksym )
    {
     case 0x01A1 : return 0x0104;
     case 0x01A2 : return 0x02D8;
     case 0x01A3 : return 0x0141;
     case 0x01A5 : return 0x013D;
     case 0x01A6 : return 0x015A;
     case 0x01A9 : return 0x0160;
     case 0x01AA : return 0x015E;
     case 0x01AB : return 0x0164;
     case 0x01AC : return 0x0179;
     case 0x01AE : return 0x017D;
     case 0x01AF : return 0x017B;
     case 0x01B1 : return 0x0105;
     case 0x01B2 : return 0x02DB;
     case 0x01B3 : return 0x0142;
     case 0x01B5 : return 0x013E;
     case 0x01B6 : return 0x015B;
     case 0x01B7 : return 0x02C7;
     case 0x01B9 : return 0x0161;
     case 0x01BA : return 0x015F;
     case 0x01BB : return 0x0165;
     case 0x01BC : return 0x017A;
     case 0x01BD : return 0x02DD;
     case 0x01BE : return 0x017E;
     case 0x01BF : return 0x017C;
     case 0x01C0 : return 0x0154;
     case 0x01C3 : return 0x0102;
     case 0x01C5 : return 0x0139;
     case 0x01C6 : return 0x0106;
     case 0x01C8 : return 0x010C;
     case 0x01CA : return 0x0118;
     case 0x01CC : return 0x011A;
     case 0x01CF : return 0x010E;
     case 0x01D0 : return 0x0110;
     case 0x01D1 : return 0x0143;
     case 0x01D2 : return 0x0147;
     case 0x01D5 : return 0x0150;
     case 0x01D8 : return 0x0158;
     case 0x01D9 : return 0x016E;
     case 0x01DB : return 0x0170;
     case 0x01DE : return 0x0162;
     case 0x01E0 : return 0x0155;
     case 0x01E3 : return 0x0103;
     case 0x01E5 : return 0x013A;
     case 0x01E6 : return 0x0107;
     case 0x01E8 : return 0x010D;
     case 0x01EA : return 0x0119;
     case 0x01EC : return 0x011B;
     case 0x01EF : return 0x010F;
     case 0x01F0 : return 0x0111;
     case 0x01F1 : return 0x0144;
     case 0x01F2 : return 0x0148;
     case 0x01F5 : return 0x0151;
     case 0x01F8 : return 0x0159;
     case 0x01F9 : return 0x016F;
     case 0x01FB : return 0x0171;
     case 0x01FE : return 0x0163;
     case 0x01FF : return 0x02D9;
     case 0x02A1 : return 0x0126;
     case 0x02A6 : return 0x0124;
     case 0x02A9 : return 0x0130;
     case 0x02AB : return 0x011E;
     case 0x02AC : return 0x0134;
     case 0x02B1 : return 0x0127;
     case 0x02B6 : return 0x0125;
     case 0x02B9 : return 0x0131;
     case 0x02BB : return 0x011F;
     case 0x02BC : return 0x0135;
     case 0x02C5 : return 0x010A;
     case 0x02C6 : return 0x0108;
     case 0x02D5 : return 0x0120;
     case 0x02D8 : return 0x011C;
     case 0x02DD : return 0x016C;
     case 0x02DE : return 0x015C;
     case 0x02E5 : return 0x010B;
     case 0x02E6 : return 0x0109;
     case 0x02F5 : return 0x0121;
     case 0x02F8 : return 0x011D;
     case 0x02FD : return 0x016D;
     case 0x02FE : return 0x015D;
     case 0x03A2 : return 0x0138;
     case 0x03A3 : return 0x0156;
     case 0x03A5 : return 0x0128;
     case 0x03A6 : return 0x013B;
     case 0x03AA : return 0x0112;
     case 0x03AB : return 0x0122;
     case 0x03AC : return 0x0166;
     case 0x03B3 : return 0x0157;
     case 0x03B5 : return 0x0129;
     case 0x03B6 : return 0x013C;
     case 0x03BA : return 0x0113;
     case 0x03BB : return 0x0123;
     case 0x03BC : return 0x0167;
     case 0x03BD : return 0x014A;
     case 0x03BF : return 0x014B;
     case 0x03C0 : return 0x0100;
     case 0x03C7 : return 0x012E;
     case 0x03CC : return 0x0116;
     case 0x03CF : return 0x012A;
     case 0x03D1 : return 0x0145;
     case 0x03D2 : return 0x014C;
     case 0x03D3 : return 0x0136;
     case 0x03D9 : return 0x0172;
     case 0x03DD : return 0x0168;
     case 0x03DE : return 0x016A;
     case 0x03E0 : return 0x0101;
     case 0x03E7 : return 0x012F;
     case 0x03EC : return 0x0117;
     case 0x03EF : return 0x012B;
     case 0x03F1 : return 0x0146;
     case 0x03F2 : return 0x014D;
     case 0x03F3 : return 0x0137;
     case 0x03F9 : return 0x0173;
     case 0x03FD : return 0x0169;
     case 0x03FE : return 0x016B;
     case 0x13BC : return 0x0152;
     case 0x13BD : return 0x0153;
     case 0x13BE : return 0x0178;
     case 0x047E : return 0x203E;
     case 0x04A1 : return 0x3002;
     case 0x04A2 : return 0x300C;
     case 0x04A3 : return 0x300D;
     case 0x04A4 : return 0x3001;
     case 0x04A5 : return 0x30FB;
     case 0x04A6 : return 0x30F2;
     case 0x04A7 : return 0x30A1;
     case 0x04A8 : return 0x30A3;
     case 0x04A9 : return 0x30A5;
     case 0x04AA : return 0x30A7;
     case 0x04AB : return 0x30A9;
     case 0x04AC : return 0x30E3;
     case 0x04AD : return 0x30E5;
     case 0x04AE : return 0x30E7;
     case 0x04AF : return 0x30C3;
     case 0x04B0 : return 0x30FC;
     case 0x04B1 : return 0x30A2;
     case 0x04B2 : return 0x30A4;
     case 0x04B3 : return 0x30A6;
     case 0x04B4 : return 0x30A8;
     case 0x04B5 : return 0x30AA;
     case 0x04B6 : return 0x30AB;
     case 0x04B7 : return 0x30AD;
     case 0x04B8 : return 0x30AF;
     case 0x04B9 : return 0x30B1;
     case 0x04BA : return 0x30B3;
     case 0x04BB : return 0x30B5;
     case 0x04BC : return 0x30B7;
     case 0x04BD : return 0x30B9;
     case 0x04BE : return 0x30BB;
     case 0x04BF : return 0x30BD;
     case 0x04C0 : return 0x30BF;
     case 0x04C1 : return 0x30C1;
     case 0x04C2 : return 0x30C4;
     case 0x04C3 : return 0x30C6;
     case 0x04C4 : return 0x30C8;
     case 0x04C5 : return 0x30CA;
     case 0x04C6 : return 0x30CB;
     case 0x04C7 : return 0x30CC;
     case 0x04C8 : return 0x30CD;
     case 0x04C9 : return 0x30CE;
     case 0x04CA : return 0x30CF;
     case 0x04CB : return 0x30D2;
     case 0x04CC : return 0x30D5;
     case 0x04CD : return 0x30D8;
     case 0x04CE : return 0x30DB;
     case 0x04CF : return 0x30DE;
     case 0x04D0 : return 0x30DF;
     case 0x04D1 : return 0x30E0;
     case 0x04D2 : return 0x30E1;
     case 0x04D3 : return 0x30E2;
     case 0x04D4 : return 0x30E4;
     case 0x04D5 : return 0x30E6;
     case 0x04D6 : return 0x30E8;
     case 0x04D7 : return 0x30E9;
     case 0x04D8 : return 0x30EA;
     case 0x04D9 : return 0x30EB;
     case 0x04DA : return 0x30EC;
     case 0x04DB : return 0x30ED;
     case 0x04DC : return 0x30EF;
     case 0x04DD : return 0x30F3;
     case 0x04DE : return 0x309B;
     case 0x04DF : return 0x309C;
     case 0x05AC : return 0x060C;
     case 0x05BB : return 0x061B;
     case 0x05BF : return 0x061F;
     case 0x05C1 : return 0x0621;
     case 0x05C2 : return 0x0622;
     case 0x05C3 : return 0x0623;
     case 0x05C4 : return 0x0624;
     case 0x05C5 : return 0x0625;
     case 0x05C6 : return 0x0626;
     case 0x05C7 : return 0x0627;
     case 0x05C8 : return 0x0628;
     case 0x05C9 : return 0x0629;
     case 0x05CA : return 0x062A;
     case 0x05CB : return 0x062B;
     case 0x05CC : return 0x062C;
     case 0x05CD : return 0x062D;
     case 0x05CE : return 0x062E;
     case 0x05CF : return 0x062F;
     case 0x05D0 : return 0x0630;
     case 0x05D1 : return 0x0631;
     case 0x05D2 : return 0x0632;
     case 0x05D3 : return 0x0633;
     case 0x05D4 : return 0x0634;
     case 0x05D5 : return 0x0635;
     case 0x05D6 : return 0x0636;
     case 0x05D7 : return 0x0637;
     case 0x05D8 : return 0x0638;
     case 0x05D9 : return 0x0639;
     case 0x05DA : return 0x063A;
     case 0x05E0 : return 0x0640;
     case 0x05E1 : return 0x0641;
     case 0x05E2 : return 0x0642;
     case 0x05E3 : return 0x0643;
     case 0x05E4 : return 0x0644;
     case 0x05E5 : return 0x0645;
     case 0x05E6 : return 0x0646;
     case 0x05E7 : return 0x0647;
     case 0x05E8 : return 0x0648;
     case 0x05E9 : return 0x0649;
     case 0x05EA : return 0x064A;
     case 0x05EB : return 0x064B;
     case 0x05EC : return 0x064C;
     case 0x05ED : return 0x064D;
     case 0x05EE : return 0x064E;
     case 0x05EF : return 0x064F;
     case 0x05F0 : return 0x0650;
     case 0x05F1 : return 0x0651;
     case 0x05F2 : return 0x0652;
     case 0x06A1 : return 0x0452;
     case 0x06A2 : return 0x0453;
     case 0x06A3 : return 0x0451;
     case 0x06A4 : return 0x0454;
     case 0x06A5 : return 0x0455;
     case 0x06A6 : return 0x0456;
     case 0x06A7 : return 0x0457;
     case 0x06A8 : return 0x0458;
     case 0x06A9 : return 0x0459;
     case 0x06AA : return 0x045A;
     case 0x06AB : return 0x045B;
     case 0x06AC : return 0x045C;
     case 0x06AD : return 0x0491;
     case 0x06AE : return 0x045E;
     case 0x06AF : return 0x045F;
     case 0x06B0 : return 0x2116;
     case 0x06B1 : return 0x0402;
     case 0x06B2 : return 0x0403;
     case 0x06B3 : return 0x0401;
     case 0x06B4 : return 0x0404;
     case 0x06B5 : return 0x0405;
     case 0x06B6 : return 0x0406;
     case 0x06B7 : return 0x0407;
     case 0x06B8 : return 0x0408;
     case 0x06B9 : return 0x0409;
     case 0x06BA : return 0x040A;
     case 0x06BB : return 0x040B;
     case 0x06BC : return 0x040C;
     case 0x06BD : return 0x0490;
     case 0x06BE : return 0x040E;
     case 0x06BF : return 0x040F;
     case 0x06C0 : return 0x044E;
     case 0x06C1 : return 0x0430;
     case 0x06C2 : return 0x0431;
     case 0x06C3 : return 0x0446;
     case 0x06C4 : return 0x0434;
     case 0x06C5 : return 0x0435;
     case 0x06C6 : return 0x0444;
     case 0x06C7 : return 0x0433;
     case 0x06C8 : return 0x0445;
     case 0x06C9 : return 0x0438;
     case 0x06CA : return 0x0439;
     case 0x06CB : return 0x043A;
     case 0x06CC : return 0x043B;
     case 0x06CD : return 0x043C;
     case 0x06CE : return 0x043D;
     case 0x06CF : return 0x043E;
     case 0x06D0 : return 0x043F;
     case 0x06D1 : return 0x044F;
     case 0x06D2 : return 0x0440;
     case 0x06D3 : return 0x0441;
     case 0x06D4 : return 0x0442;
     case 0x06D5 : return 0x0443;
     case 0x06D6 : return 0x0436;
     case 0x06D7 : return 0x0432;
     case 0x06D8 : return 0x044C;
     case 0x06D9 : return 0x044B;
     case 0x06DA : return 0x0437;
     case 0x06DB : return 0x0448;
     case 0x06DC : return 0x044D;
     case 0x06DD : return 0x0449;
     case 0x06DE : return 0x0447;
     case 0x06DF : return 0x044A;
     case 0x06E0 : return 0x042E;
     case 0x06E1 : return 0x0410;
     case 0x06E2 : return 0x0411;
     case 0x06E3 : return 0x0426;
     case 0x06E4 : return 0x0414;
     case 0x06E5 : return 0x0415;
     case 0x06E6 : return 0x0424;
     case 0x06E7 : return 0x0413;
     case 0x06E8 : return 0x0425;
     case 0x06E9 : return 0x0418;
     case 0x06EA : return 0x0419;
     case 0x06EB : return 0x041A;
     case 0x06EC : return 0x041B;
     case 0x06ED : return 0x041C;
     case 0x06EE : return 0x041D;
     case 0x06EF : return 0x041E;
     case 0x06F0 : return 0x041F;
     case 0x06F1 : return 0x042F;
     case 0x06F2 : return 0x0420;
     case 0x06F3 : return 0x0421;
     case 0x06F4 : return 0x0422;
     case 0x06F5 : return 0x0423;
     case 0x06F6 : return 0x0416;
     case 0x06F7 : return 0x0412;
     case 0x06F8 : return 0x042C;
     case 0x06F9 : return 0x042B;
     case 0x06FA : return 0x0417;
     case 0x06FB : return 0x0428;
     case 0x06FC : return 0x042D;
     case 0x06FD : return 0x0429;
     case 0x06FE : return 0x0427;
     case 0x06FF : return 0x042A;
     case 0x07A1 : return 0x0386;
     case 0x07A2 : return 0x0388;
     case 0x07A3 : return 0x0389;
     case 0x07A4 : return 0x038A;
     case 0x07A5 : return 0x03AA;
     case 0x07A7 : return 0x038C;
     case 0x07A8 : return 0x038E;
     case 0x07A9 : return 0x03AB;
     case 0x07AB : return 0x038F;
     case 0x07AE : return 0x0385;
     case 0x07AF : return 0x2015;
     case 0x07B1 : return 0x03AC;
     case 0x07B2 : return 0x03AD;
     case 0x07B3 : return 0x03AE;
     case 0x07B4 : return 0x03AF;
     case 0x07B5 : return 0x03CA;
     case 0x07B6 : return 0x0390;
     case 0x07B7 : return 0x03CC;
     case 0x07B8 : return 0x03CD;
     case 0x07B9 : return 0x03CB;
     case 0x07BA : return 0x03B0;
     case 0x07BB : return 0x03CE;
     case 0x07C1 : return 0x0391;
     case 0x07C2 : return 0x0392;
     case 0x07C3 : return 0x0393;
     case 0x07C4 : return 0x0394;
     case 0x07C5 : return 0x0395;
     case 0x07C6 : return 0x0396;
     case 0x07C7 : return 0x0397;
     case 0x07C8 : return 0x0398;
     case 0x07C9 : return 0x0399;
     case 0x07CA : return 0x039A;
     case 0x07CB : return 0x039B;
     case 0x07CC : return 0x039C;
     case 0x07CD : return 0x039D;
     case 0x07CE : return 0x039E;
     case 0x07CF : return 0x039F;
     case 0x07D0 : return 0x03A0;
     case 0x07D1 : return 0x03A1;
     case 0x07D2 : return 0x03A3;
     case 0x07D4 : return 0x03A4;
     case 0x07D5 : return 0x03A5;
     case 0x07D6 : return 0x03A6;
     case 0x07D7 : return 0x03A7;
     case 0x07D8 : return 0x03A8;
     case 0x07D9 : return 0x03A9;
     case 0x07E1 : return 0x03B1;
     case 0x07E2 : return 0x03B2;
     case 0x07E3 : return 0x03B3;
     case 0x07E4 : return 0x03B4;
     case 0x07E5 : return 0x03B5;
     case 0x07E6 : return 0x03B6;
     case 0x07E7 : return 0x03B7;
     case 0x07E8 : return 0x03B8;
     case 0x07E9 : return 0x03B9;
     case 0x07EA : return 0x03BA;
     case 0x07EB : return 0x03BB;
     case 0x07EC : return 0x03BC;
     case 0x07ED : return 0x03BD;
     case 0x07EE : return 0x03BE;
     case 0x07EF : return 0x03BF;
     case 0x07F0 : return 0x03C0;
     case 0x07F1 : return 0x03C1;
     case 0x07F2 : return 0x03C3;
     case 0x07F3 : return 0x03C2;
     case 0x07F4 : return 0x03C4;
     case 0x07F5 : return 0x03C5;
     case 0x07F6 : return 0x03C6;
     case 0x07F7 : return 0x03C7;
     case 0x07F8 : return 0x03C8;
     case 0x07F9 : return 0x03C9;
     case 0x08A1 : return 0x23B7;
     case 0x08A4 : return 0x2320;
     case 0x08A5 : return 0x2321;
     case 0x08A7 : return 0x23A1;
     case 0x08A8 : return 0x23A3;
     case 0x08A9 : return 0x23A4;
     case 0x08AA : return 0x23A6;
     case 0x08AB : return 0x239B;
     case 0x08AC : return 0x239D;
     case 0x08AD : return 0x239E;
     case 0x08AE : return 0x23A0;
     case 0x08AF : return 0x23A8;
     case 0x08B0 : return 0x23AC;
     case 0x08BC : return 0x2264;
     case 0x08BD : return 0x2260;
     case 0x08BE : return 0x2265;
     case 0x08BF : return 0x222B;
     case 0x08C0 : return 0x2234;
     case 0x08C1 : return 0x221D;
     case 0x08C2 : return 0x221E;
     case 0x08C5 : return 0x2207;
     case 0x08C8 : return 0x223C;
     case 0x08C9 : return 0x2243;
     case 0x08CD : return 0x21D4;
     case 0x08CE : return 0x21D2;
     case 0x08CF : return 0x2261;
     case 0x08D6 : return 0x221A;
     case 0x08DA : return 0x2282;
     case 0x08DB : return 0x2283;
     case 0x08DC : return 0x2229;
     case 0x08DD : return 0x222A;
     case 0x08DE : return 0x2227;
     case 0x08DF : return 0x2228;
     case 0x08EF : return 0x2202;
     case 0x08F6 : return 0x0192;
     case 0x08FB : return 0x2190;
     case 0x08FC : return 0x2191;
     case 0x08FD : return 0x2192;
     case 0x08FE : return 0x2193;
     case 0x09E0 : return 0x25C6;
     case 0x09E1 : return 0x2592;
     case 0x09E2 : return 0x2409;
     case 0x09E3 : return 0x240C;
     case 0x09E4 : return 0x240D;
     case 0x09E5 : return 0x240A;
     case 0x09E8 : return 0x2424;
     case 0x09E9 : return 0x240B;
     case 0x09EA : return 0x2518;
     case 0x09EB : return 0x2510;
     case 0x09EC : return 0x250C;
     case 0x09ED : return 0x2514;
     case 0x09EE : return 0x253C;
     case 0x09EF : return 0x23BA;
     case 0x09F0 : return 0x23BB;
     case 0x09F1 : return 0x2500;
     case 0x09F2 : return 0x23BC;
     case 0x09F3 : return 0x23BD;
     case 0x09F4 : return 0x251C;
     case 0x09F5 : return 0x2524;
     case 0x09F6 : return 0x2534;
     case 0x09F7 : return 0x252C;
     case 0x09F8 : return 0x2502;
     case 0x0AA1 : return 0x2003;
     case 0x0AA2 : return 0x2002;
     case 0x0AA3 : return 0x2004;
     case 0x0AA4 : return 0x2005;
     case 0x0AA5 : return 0x2007;
     case 0x0AA6 : return 0x2008;
     case 0x0AA7 : return 0x2009;
     case 0x0AA8 : return 0x200A;
     case 0x0AA9 : return 0x2014;
     case 0x0AAA : return 0x2013;
     case 0x0AAE : return 0x2026;
     case 0x0AAF : return 0x2025;
     case 0x0AB0 : return 0x2153;
     case 0x0AB1 : return 0x2154;
     case 0x0AB2 : return 0x2155;
     case 0x0AB3 : return 0x2156;
     case 0x0AB4 : return 0x2157;
     case 0x0AB5 : return 0x2158;
     case 0x0AB6 : return 0x2159;
     case 0x0AB7 : return 0x215A;
     case 0x0AB8 : return 0x2105;
     case 0x0ABB : return 0x2012;
     case 0x0AC3 : return 0x215B;
     case 0x0AC4 : return 0x215C;
     case 0x0AC5 : return 0x215D;
     case 0x0AC6 : return 0x215E;
     case 0x0AC9 : return 0x2122;
     case 0x0AD0 : return 0x2018;
     case 0x0AD1 : return 0x2019;
     case 0x0AD2 : return 0x201C;
     case 0x0AD3 : return 0x201D;
     case 0x0AD4 : return 0x211E;
     case 0x0AD5 : return 0x2030;
     case 0x0AD6 : return 0x2032;
     case 0x0AD7 : return 0x2033;
     case 0x0AD9 : return 0x271D;
     case 0x0AEC : return 0x2663;
     case 0x0AED : return 0x2666;
     case 0x0AEE : return 0x2665;
     case 0x0AF0 : return 0x2720;
     case 0x0AF1 : return 0x2020;
     case 0x0AF2 : return 0x2021;
     case 0x0AF3 : return 0x2713;
     case 0x0AF4 : return 0x2717;
     case 0x0AF5 : return 0x266F;
     case 0x0AF6 : return 0x266D;
     case 0x0AF7 : return 0x2642;
     case 0x0AF8 : return 0x2640;
     case 0x0AF9 : return 0x260E;
     case 0x0AFA : return 0x2315;
     case 0x0AFB : return 0x2117;
     case 0x0AFC : return 0x2038;
     case 0x0AFD : return 0x201A;
     case 0x0AFE : return 0x201E;
     case 0x0BC2 : return 0x22A4;
     case 0x0BC4 : return 0x230A;
     case 0x0BCA : return 0x2218;
     case 0x0BCC : return 0x2395;
     case 0x0BCE : return 0x22A5;
     case 0x0BCF : return 0x25CB;
     case 0x0BD3 : return 0x2308;
     case 0x0BDC : return 0x22A3;
     case 0x0BFC : return 0x22A2;
     case 0x0CDF : return 0x2017;
     case 0x0CE0 : return 0x05D0;
     case 0x0CE1 : return 0x05D1;
     case 0x0CE2 : return 0x05D2;
     case 0x0CE3 : return 0x05D3;
     case 0x0CE4 : return 0x05D4;
     case 0x0CE5 : return 0x05D5;
     case 0x0CE6 : return 0x05D6;
     case 0x0CE7 : return 0x05D7;
     case 0x0CE8 : return 0x05D8;
     case 0x0CE9 : return 0x05D9;
     case 0x0CEA : return 0x05DA;
     case 0x0CEB : return 0x05DB;
     case 0x0CEC : return 0x05DC;
     case 0x0CED : return 0x05DD;
     case 0x0CEE : return 0x05DE;
     case 0x0CEF : return 0x05DF;
     case 0x0CF0 : return 0x05E0;
     case 0x0CF1 : return 0x05E1;
     case 0x0CF2 : return 0x05E2;
     case 0x0CF3 : return 0x05E3;
     case 0x0CF4 : return 0x05E4;
     case 0x0CF5 : return 0x05E5;
     case 0x0CF6 : return 0x05E6;
     case 0x0CF7 : return 0x05E7;
     case 0x0CF8 : return 0x05E8;
     case 0x0CF9 : return 0x05E9;
     case 0x0CFA : return 0x05EA;
     case 0x0DA1 : return 0x0E01;
     case 0x0DA2 : return 0x0E02;
     case 0x0DA3 : return 0x0E03;
     case 0x0DA4 : return 0x0E04;
     case 0x0DA5 : return 0x0E05;
     case 0x0DA6 : return 0x0E06;
     case 0x0DA7 : return 0x0E07;
     case 0x0DA8 : return 0x0E08;
     case 0x0DA9 : return 0x0E09;
     case 0x0DAA : return 0x0E0A;
     case 0x0DAB : return 0x0E0B;
     case 0x0DAC : return 0x0E0C;
     case 0x0DAD : return 0x0E0D;
     case 0x0DAE : return 0x0E0E;
     case 0x0DAF : return 0x0E0F;
     case 0x0DB0 : return 0x0E10;
     case 0x0DB1 : return 0x0E11;
     case 0x0DB2 : return 0x0E12;
     case 0x0DB3 : return 0x0E13;
     case 0x0DB4 : return 0x0E14;
     case 0x0DB5 : return 0x0E15;
     case 0x0DB6 : return 0x0E16;
     case 0x0DB7 : return 0x0E17;
     case 0x0DB8 : return 0x0E18;
     case 0x0DB9 : return 0x0E19;
     case 0x0DBA : return 0x0E1A;
     case 0x0DBB : return 0x0E1B;
     case 0x0DBC : return 0x0E1C;
     case 0x0DBD : return 0x0E1D;
     case 0x0DBE : return 0x0E1E;
     case 0x0DBF : return 0x0E1F;
     case 0x0DC0 : return 0x0E20;
     case 0x0DC1 : return 0x0E21;
     case 0x0DC2 : return 0x0E22;
     case 0x0DC3 : return 0x0E23;
     case 0x0DC4 : return 0x0E24;
     case 0x0DC5 : return 0x0E25;
     case 0x0DC6 : return 0x0E26;
     case 0x0DC7 : return 0x0E27;
     case 0x0DC8 : return 0x0E28;
     case 0x0DC9 : return 0x0E29;
     case 0x0DCA : return 0x0E2A;
     case 0x0DCB : return 0x0E2B;
     case 0x0DCC : return 0x0E2C;
     case 0x0DCD : return 0x0E2D;
     case 0x0DCE : return 0x0E2E;
     case 0x0DCF : return 0x0E2F;
     case 0x0DD0 : return 0x0E30;
     case 0x0DD1 : return 0x0E31;
     case 0x0DD2 : return 0x0E32;
     case 0x0DD3 : return 0x0E33;
     case 0x0DD4 : return 0x0E34;
     case 0x0DD5 : return 0x0E35;
     case 0x0DD6 : return 0x0E36;
     case 0x0DD7 : return 0x0E37;
     case 0x0DD8 : return 0x0E38;
     case 0x0DD9 : return 0x0E39;
     case 0x0DDA : return 0x0E3A;
     case 0x0DDF : return 0x0E3F;
     case 0x0DE0 : return 0x0E40;
     case 0x0DE1 : return 0x0E41;
     case 0x0DE2 : return 0x0E42;
     case 0x0DE3 : return 0x0E43;
     case 0x0DE4 : return 0x0E44;
     case 0x0DE5 : return 0x0E45;
     case 0x0DE6 : return 0x0E46;
     case 0x0DE7 : return 0x0E47;
     case 0x0DE8 : return 0x0E48;
     case 0x0DE9 : return 0x0E49;
     case 0x0DEA : return 0x0E4A;
     case 0x0DEB : return 0x0E4B;
     case 0x0DEC : return 0x0E4C;
     case 0x0DED : return 0x0E4D;
     case 0x0DF0 : return 0x0E50;
     case 0x0DF1 : return 0x0E51;
     case 0x0DF2 : return 0x0E52;
     case 0x0DF3 : return 0x0E53;
     case 0x0DF4 : return 0x0E54;
     case 0x0DF5 : return 0x0E55;
     case 0x0DF6 : return 0x0E56;
     case 0x0DF7 : return 0x0E57;
     case 0x0DF8 : return 0x0E58;
     case 0x0DF9 : return 0x0E59;
     case 0x10001D1 : return 0x01D2;
     case 0x20AC : return 0x20AC;
     case 0x1002248 : return 0x2245;
    }

  if( ksym<0x100 ) return ksym;

  if( ksym>=0x1000000 && ksym<0x1010000 ) return ksym-0x1000000;

  return 0;
 }

char X11KeyMap::MapToChar(KeySym ksym)
 {
  if( uint32 unicode=MapToUnicode(ksym) )
    {
     wchar_t src[]={(wchar_t)unicode,0};
     char dst[2];

     ulen len=std::wcstombs(dst,src,2);

     if( len==1 ) return dst[0];
    }

  return 0;
 }

bool X11KeyMap::IsChar(KeySym ksym)
 {
  if( uint32 unicode=MapToUnicode(ksym) )
    {
     return std::iswalpha(unicode);
    }

  return false;
 }

auto X11KeyMap::mapToChar(unsigned state,unsigned keycode) const -> VKeyExtChar
 {
  KeySym ksym;
  char ch;

  if( keycode<(unsigned)keycode_min || keycode>(unsigned)keycode_max )
    {
     ksym=NoSymbol;
     ch=0;
    }
  else
    {
     KeySym *line=table+(keycode-(unsigned)keycode_min)*(unsigned)page_count;

     ksym=line[2];

     if( IsKP(ksym) )
       {
        if( (state&Mod2Mask) )
          {
           ksym=line[3];

           ch=MapToChar(line[1]);
          }
        else
          {
           ch=MapToChar(line[0]);
          }
       }
     else
       {
        bool shift = state&ShiftMask ;
        bool upper = (state&LockMask)? !shift : shift ;

        KeySym ksym=line[0];

        if( IsChar(ksym) )
          ch=MapToChar(upper?line[1]:ksym);
        else
          ch=MapToChar(shift?line[1]:ksym);
       }
    }

  auto vkeyext=MapToVKey(ksym);

  return VKeyExtChar(vkeyext,ch);
 }

/* class X11Desktop */

void X11Desktop::guardDisplay(const char *format)
 {
  if( !display )
    {
     Printf(Exception,format,"no display");
    }

  if( keymap.noMap() )
    {
     Printf(Exception,format,"no key map");
    }

  if( sem_fd==-1 )
    {
     Printf(Exception,format,"no interrupt semaphore");
    }
 }

Bool X11Desktop::MatchAll(Display *,XEvent *,XPointer)
 {
  return True;
 }

int X11Desktop::ErrorHandler(Display *display,XErrorEvent *err)
 {
  Printf(NoException,"#;> #;\n",DesktopObject.func_name,PrintXStatus(display,err->error_code));

  return 0;
 }

int X11Desktop::IOErrorHandler(Display *)
 {
  Printf(NoException,"X11IOFault>\n");

  return 0;
 }

X11Desktop::X11Desktop()
 : display(XOpenDisplay(0)),
   keymap(display)
 {
  if( !display ) return;

  XSetErrorHandler(ErrorHandler);
  XSetIOErrorHandler(IOErrorHandler);

  screen=DefaultScreen(display);
  fd=ConnectionNumber(display);

  sem_fd=eventfd(0,EFD_SEMAPHORE);

  // XLib-xcb bug workaround

  setFuncName("XKeysymToKeycode");

  XKeysymToKeycode(display,XK_F1);
 }

X11Desktop::~X11Desktop()
 {
  if( display )
    {
     setFuncName("XCloseDisplay");

     XCloseDisplay(display);
    }

  if( sem_fd!=-1 ) close(sem_fd);
 }

WindowHost * X11Desktop::createHost()
 {
  guardDisplay("CCore::Video::Private_Desktop::X11Desktop::createHost() : #;");

  return new X11Host(display,screen);
 }

Point X11Desktop::getScreenSize()
 {
  guardDisplay("CCore::Video::Private_Desktop::X11Desktop::getScreenSize() : #;");

  return Point_cast(DisplayWidth(display,screen),DisplayHeight(display,screen));
 }

Pane X11Desktop::getMaxPane()
 {
  guardDisplay("CCore::Video::Private_Desktop::X11Desktop::getMaxPane() : #;");

  Window root=RootWindow(display,screen);

  setFuncName("XInternAtom");

  Atom atom=XInternAtom(display,"_NET_WORKAREA",True);

  if( atom!=None )
    {
     Atom atom_type=None;
     int format=0;
     unsigned long ret_len=0;
     unsigned long rest_len=0;
     unsigned char *data=0;

     setFuncName("XGetWindowProperty");

     XGetWindowProperty(display,root,atom,0,4,False,AnyPropertyType,&atom_type,&format,&ret_len,&rest_len,&data);

     if( format )
       {
        if( format==32 && ret_len==4 && rest_len==0 )
          {
           unsigned long *data32=(unsigned long *)data;

           Pane ret=Pane_cast(data32[0],data32[1],data32[2],data32[3]);

           XFree(data);

           return ret;
          }

        XFree(data);
       }
    }

  return Pane(Null,getScreenSize());
 }

bool X11Desktop::pump(unsigned lim)
 {
  guardDisplay("CCore::Video::Private_Desktop::X11Desktop::pump(...) : #;");

  for(XEvent event; lim && XCheckIfEvent(display,&event,MatchAll,0) ;lim--)
    {
     if( !WindowDispatcher::DispatchEvent(event) ) return false;
    }

  if( !WindowDispatcher::Ping() ) return false;

  return true;
 }

void X11Desktop::wait(TimeScope time_scope)
 {
  if( auto t=+time_scope.get() )
    {
     const char *format="CCore::Video::Private_Desktop::X11Desktop::wait(...) : #;";

     guardDisplay(format);

     pollfd list[2];

     list[0].fd=fd;
     list[0].events=POLLIN;

     list[1].fd=sem_fd;
     list[1].events=POLLIN;

     int result=poll(list,2,t);

     SysGuard(format, result!=-1 );

     if( result )
       {
        if( list[1].revents&POLLIN )
          {
           eventfd_t value;

           eventfd_read(sem_fd,&value);
          }
       }
    }
 }

void X11Desktop::interrupt()
 {
  const char *format="CCore::Video::Private_Desktop::X11Desktop::interrupt(...) : #;";

  guardDisplay(format);

  eventfd_write(sem_fd,1);
 }

/* CloseApp() */

void CloseApp() { X11Host::CloseApp(); }

/* RestoreApp() */

void RestoreApp() { X11Host::RestoreApp(); }

} // namespace Private_Desktop

using namespace Private_Desktop;

/* functions */

void TickEntryEvent()
 {
  TaskEventHost.add<TickEvent>(TickEvent::Entry);
 }

void TickLeaveEvent()
 {
  TaskEventHost.add<TickEvent>(TickEvent::Leave);
 }

void AbortMsgBox(StrLen text)
 {
  X11Host::AbortMsgBox(text);
 }

void ErrorMsgBox(StrLen text,StrLen title)
 {
  X11Host::ErrorMsgBox(text,title);
 }

CmdDisplay StartDisplay()
 {
  return CmdDisplay_Normal;
 }

char ToLowerCase(char ch)
 {
  return std::tolower(ch);
 }

CmpResult NativeCmp(char a_,char b_)
 {
  char a[]={a_,0};
  char b[]={b_,0};

  int cmp=std::strcoll(a,b);

  return LessCmp(cmp,0);
 }

void SetAppIcon(Picture pict)
 {
  HiddenWindow.setIcon(pict);
 }

/* global DefaultDesktop */

DefaultDesktopPtr::DefaultDesktopPtr()
 {
  ptr=&DesktopObject;
 }

DefaultDesktopPtr DefaultDesktop CCORE_INITPRI_3 ;

} // namespace Video
} // namespace CCore



.. title:: WIMSL: advanced memory management. 

.. ------------------------------------------------------------------------------------------------------------------

Abstract
========

WIMSL: What I miss in the standard library.

Yes. I need the *memory mangement* and need it better, than the standard library provides.

Prologue
========

So, what's exactly SL gives us.
Two memory management functions sets.

The old C pair::

   void * malloc(size_t len);

   void free(void *mem);

The new C++ pair::

   void * operator new[] (size_t len); // for   char *mem=new char[len];

   void operator delete[] (void *mem); // for   delete[] mem;

In any sane implementation they are the same, except the *new* throws an exception, but *malloc* just returns 0.

What is missing
===============

Oh, a lot of things!

Protection
----------

TODO

Expand and shrink
-----------------

TODO

Memory usage statistics
-----------------------

TODO

Utilities
---------

TODO

CCore memory management
=======================

When I've started development of *CCore*, the first prioryty task was to design the proper memory management subsystem, instead of standard.
Why? For several reasons.

TODO

EOF
===

by Sergey Strukov

CCore brief: http://sergeystrukov.github.io/CCore-Sphinx-3-60/brief/brief.html

CCore: https://github.com/SergeyStrukov/CCore-3-xx

